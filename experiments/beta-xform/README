
This directory has code that explores the Beta Transform
which is the iterated eqn  (bx mod 1)  for 1< b < 2

Almost all code is written to use K = b/2

Here's what we got:

remap.c: the expander and compressor from the paper

skew.c: Skew Takagi map and skew Haar wavelet

reigen.c: Recursve eigenfunctions for the undershift (fast algo)
    Computes only the invariant measure. See also complex.c
    rexfer.c is another early failed attempt at decaying eigenfunctions

beta.c: sanity-check experiments against exact Parry-Gel'fond
    expression for invariant measure.

irred.c, irred-viz.c irred-fraction.c: compute roots of the golden
    polynomials, and find thier valid labels, and count how many of
    them there are, and so on. irred-viz.c is a failed experiment.
    irred-fraction.c works on the ontinued-fraction representation.

bifur/bernie.C: feignbaum-style diagrams of various maps, low precision.

bifur/bigbern.C: like above but arbitrary precision

bifur/unbernie.C: something else ... ??

fp-diagram.C: exact frobenius-perron eigenstate using reigen.c

psi*c: the hessenberg eigenfunctions

island: from bernie.C 

deguess.c: contorted sums over the invariant measure bits

almost.c:
complex-roots/alldisk.C:
complex-roots/betadisk.C:   all explore the constant term E(beta;zeta)
      Sample run for K=beta/2=0.85
      ./betadisk betadisk 600 600 0 0.0 0.0 2.4 0.85

complex-roots/zetadisk.C: like above, but just a radial slice.
      Deleted; was marked as failure

normie.C: normalization integral sum_n zeta^n T^n(beta/2)
        code copied from zetadisk.C
