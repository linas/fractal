
This directory has code that explores the Beta Transform
which is the iterated eqn  (bx mod 1)  for 1< b < 2

All the early code is written to use K = b/2
Later code uses b directly.

Here's what we got:

compress/remap.c: the expander and compressor from the paper

haar-wavelet/skew.c: Skew Takagi map and skew Haar wavelet

invariant/reigen.c: Recursve eigenfunctions for the undershift (fast algo)
    Computes only the invariant measure. See also complex.c
    rexfer.c is another early failed attempt at decaying eigenfunctions

invariant/beta.c: sanity-check experiments against exact Parry-Gel'fond
    expression for invariant measure.

invariant/fp-diagram.C: exact frobenius-perron eigenstate using reigen.c

tree-trim/*: the painful trimmed-tree stuff from the paper.

bifur/bernie.C: feignbaum-style diagrams of various maps, low precision.

bifur/bigbern.C: like above but arbitrary precision

bifur/unbernie.C: something else ... ??

bifur/island: from bernie.C 

mode-lock/poincare.C: circle-map style mode-locking, but for bifurcation

hessenberg/psi*c: the hessenberg eigenfunctions

hessenberg/normie.C: normalization integral sum_n zeta^n T^n(beta/2)
        code copied from zetadisk.C

hessenberg/deguess.c: contorted sums over the invariant measure bits

hessenberg/almost.c:
hessenberg/alldisk.C:
hessenberg/betadisk.C:   all explore the constant term E(beta;zeta)
      Sample run for K=beta/2=0.85
      ./betadisk betadisk 600 600 0 0.0 0.0 2.4 0.85

hessenberg/zetadisk.C: like above, but just a radial slice.
      Deleted; was marked as failure

periodic:
    Periodic polynomials. Core implementation in selfie.c for
    self-describing polynomials and rationals, and irred-gold.c for
    older caching version of same.

irred.c, irred-viz.c irred-fraction.c: compute roots of the golden
    polynomials, and find thier valid labels, and count how many of
    them there are, and so on. irred-viz.c is a failed experiment.
    irred-fraction.c works on the continued-fraction representation.

unitary:
	Complex roots of polynomials.

check: Early work on decaying eigenfuncs. Visitation tree.
   The big one here is the iterated pushforward code, in unwrap.c
   and later un*.c extensions.

coherent: Verify coherent state solutions.

hardy: Hardy space inspired work. Fails and goes nowhere. Ignore.

graph-walk: a version of compress, now that I understand how to
    walk the shift. Well, but this is not providing the wanted
    enlightenment. Oh well.

random-walk: What happens if choices are re-interpreted as random
    walks? i.e. Brownian motion is a random walk. What do the
    corresponding beta-xform walks look like?
