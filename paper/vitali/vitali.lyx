#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{url} 
\usepackage{slashed}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "cmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Eventually Periodic Orbits and the Vitali Set
\end_layout

\begin_layout Author
Linas Vepstas
\end_layout

\begin_layout Date
28 November 2023
\end_layout

\begin_layout Abstract
The Vitali set is a canonical example of a non-measurable set.
 Apparently, the classes of eventually-periodic orbits of dynamical systems
 form a Vitali set.
 This text explores this relationship.
 
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
For many dynamical systems, the class of eventually-periodic orbits appear
 to be isomorphic(?) / homeomorphic(?) to the Vitali set.
 This is a rather broad claim, and so, for the most part, we'll stick to
 the simplest situation, the iterated Bernoulli map.
 Via the Ornstein isomorphism theorem, this is enough to handle the majority
 of cases, and so not much generality is lost.
\end_layout

\begin_layout Standard
This text reviews the construction a certain class of quotient spaces that
 can legimately be called Vitali sets.
 They arise naturally as spaces of eventually-periodic sequences.
 The prototypical example is the quotient space 
\begin_inset Formula $E_{0}=\Delta/\mathbb{D}$
\end_inset

 of the Cantor space 
\begin_inset Formula $\Delta=2^{\omega}=\left\{ 0,1\right\} ^{\omega}$
\end_inset

 modulo the space of finite length strings 
\begin_inset Formula $\mathbb{D}=2^{<\omega}$
\end_inset

.
 The equivalence relation generates cosests that consist of infinite-length
 binary strings that differ at a finite number of locations.
\end_layout

\begin_layout Standard
The set 
\begin_inset Formula $E_{0}$
\end_inset

 can legitimately be called 
\begin_inset Quotes eld
\end_inset

the Vitali set
\begin_inset Quotes erd
\end_inset

.
 That this is an appropriate name can be sketched as follows.
 Note that the cardinality of 
\begin_inset Formula $\Delta$
\end_inset

 is 
\begin_inset Formula $\aleph_{1}$
\end_inset

 while the cardinality of 
\begin_inset Formula $\mathbb{D}$
\end_inset

 is 
\begin_inset Formula $\aleph_{0}$
\end_inset

 and so we conclude that 
\begin_inset Formula $E_{0}$
\end_inset

 consists of 
\begin_inset Formula $\aleph_{1}$
\end_inset

 cosets, each of which contains 
\begin_inset Formula $\aleph_{0}$
\end_inset

 members.
 One then defines a set of points 
\begin_inset Formula $V_{0}$
\end_inset

 by choosing one representative from each coset.
 Finally, one maps the points from 
\begin_inset Formula $V_{0}$
\end_inset

 to the unit interval of the real numbers by applying the canonical binary
 expansion mapping from 
\begin_inset Formula $\Delta$
\end_inset

 to the reals.
 The image of 
\begin_inset Formula $V_{0}$
\end_inset

 is then the conventional Vitali set.
 
\end_layout

\begin_layout Standard
The alert reader might notice that this set was constructed using the dyadic
 rationals, whereas the usual Vital set is constructed using the rationals.
 No matter: if this objection arises, then the inverse 
\begin_inset Formula $?^{-1}$
\end_inset

 of the Minkowski question mark function 
\begin_inset Formula $?$
\end_inset

 can be applied, to map the dyadics to the rationals.
 At any rate, this sketch demonstrates four different objects that are isomorphi
c to one-another, and thus can each be called 
\begin_inset Quotes eld
\end_inset

the Vitali set
\begin_inset Quotes erd
\end_inset

.
 Curiously, the definition of 
\begin_inset Formula $E_{0}$
\end_inset

 does not seem to require the Axiom of Choice, at least, not superficially.
 It is only the defintion of 
\begin_inset Formula $V_{0}$
\end_inset

 that seems to require AC.
 I don't understand if this is a phantom or not.
\end_layout

\begin_layout Standard
The rest of this text expands on the above.
 It tends to veer into the territory of over-explaining the obvious.
 My apologies.
\end_layout

\begin_layout Subsection
Finite binary strings
\end_layout

\begin_layout Standard
To provide a proper anchor for the discussion, a vast ocean of throughly
 conventional and quite tedious notation will be provided.
 The next few sections can be safely skimmed or skipped; they don't say
 anything important, and could probably be moved to an appendix.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\Delta=2^{\omega}=\left\{ 0,1\right\} ^{\omega}$
\end_inset

 be the Cantor space, represented as the space of all infinite-length binary
 strings.
 The goal of this section is to more closely define the space 
\begin_inset Formula $\mathbb{D}=2^{<\omega}$
\end_inset

 of all finite-length binary strings.
 Although the idea is seemingly obvious, the additional notation is needed
 to avoid later ambiguities.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $b=\left(b_{k}\right)_{k=1}^{\infty}\in\Delta$
\end_inset

 be an infinite-length string of binary digits 
\begin_inset Formula $b_{k}$
\end_inset

.
 Define the length of such a string as 
\begin_inset Formula $\mbox{len}\left(b\right)=\left|b\right|=k$
\end_inset

, where 
\begin_inset Formula $k$
\end_inset

 is the largest integer for which 
\begin_inset Formula $b_{k}=1$
\end_inset

; write 
\begin_inset Formula $\left|b\right|=\infty$
\end_inset

 if there is no such largest integer.
 A string is finite-length if 
\begin_inset Formula $k<\infty$
\end_inset

.
 Informally, the finite-length strings are exactly the ones for which all
 digits are zero after a certain point.
 
\end_layout

\begin_layout Standard
Use this to define the set of finite-length strings as 
\begin_inset Formula 
\[
\mathbb{D}=\left\{ b\in\Delta:\mbox{len}\left(b\right)<\infty\right\} 
\]

\end_inset

.
 This defines 
\begin_inset Formula $\mathbb{D}$
\end_inset

 such that the subset relation 
\begin_inset Formula $\mathbb{D}\subset\Delta$
\end_inset

 is made explicit.
 The strings in 
\begin_inset Formula $\mathbb{D}$
\end_inset

 still have an infinite number of bits; just that almost all of them are
 zero.
 By construction, 
\begin_inset Formula $\mathbb{D}$
\end_inset

 is countable; the cardinality of 
\begin_inset Formula $\mathbb{D}$
\end_inset

 is 
\begin_inset Formula $\aleph_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
There are other conceptions of length.
 The 
\begin_inset Quotes eld
\end_inset

one-based length
\begin_inset Quotes erd
\end_inset

 is given by 
\begin_inset Formula $\mbox{len}_{1}\left(b\right)=\left|b\right|_{1}=k$
\end_inset

 where 
\begin_inset Formula $k$
\end_inset

 is the largest integer for which 
\begin_inset Formula $b_{k}=0$
\end_inset

; else 
\begin_inset Formula $\left|b\right|_{1}=\infty$
\end_inset

.
 Informally, these are the strings which have a finite-length prefix, after
 which all digits are one.
 This leads to another set 
\begin_inset Formula $\mathbb{D}_{1}$
\end_inset

 defined analogously, as 
\begin_inset Formula $\mathbb{D}_{1}=\left\{ b\in\Delta:\mbox{len}_{1}\left(b\right)<\infty\right\} $
\end_inset

.
 It is convenient to disambiguate all these by adding a subscript 
\begin_inset Formula $0$
\end_inset

 to the earlier defintions, so as to write 
\begin_inset Formula $\left|b\right|=\left|b\right|_{0}=\mbox{len}_{0}\left(b\right)$
\end_inset

 and also 
\begin_inset Formula $\mathbb{D}=\mathbb{D}_{0}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Of course, 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbb{D}_{1}$
\end_inset

 are isomorphic in the obvious, conventional sence.
 Again, lets belabor this into absurdity.
 The binary-not provides the conventional complementation map 
\begin_inset Formula $\neg:\left\{ 0,1\right\} \to\left\{ 0,1\right\} $
\end_inset

 defined as 
\begin_inset Formula $\neg:0\mapsto1$
\end_inset

 and 
\begin_inset Formula $\neg:1\mapsto0$
\end_inset

.
 This extends to an involution 
\begin_inset Formula $\neg:\Delta\to\Delta$
\end_inset

 on the Cantor space, by bit-wise extension to the product space.
 This is in the obvious, conventional manner, as the bit-wise complement:
 
\begin_inset Formula $b\mapsto\neg b=\neg\left(b_{k}\right)_{k=1}^{\infty}=\left(\neg b_{k}\right)_{k=1}^{\infty}$
\end_inset

.
 This provides the desired isomorphism 
\begin_inset Formula $\neg:\mathbb{D}_{0}\to\mathbb{D}_{1}$
\end_inset

.
 
\end_layout

\begin_layout Standard
If one is too lazy to work with an infinite number of digits, one can just
 drop the trailing repeated digits, and work with the finite prefixes.
 For this purpose, it is useful to define the set of finite-length prefixes
 as
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This set is meant to include the empty string 
\begin_inset Formula $\varepsilon$
\end_inset

.
 For this purpose, the definition can be modified to read 
\begin_inset Formula $\mathbb{P}_{0}=\{\cdots\}\cup\varepsilon$
\end_inset

, or alternately, when 
\begin_inset Formula $N=0$
\end_inset

, the restriction 
\begin_inset Formula $p_{N}=1$
\end_inset

 is not applied.
 The goal of the empty string is to make sure that 
\begin_inset Formula $\overline{0}\in\mathbb{D}_{0}$
\end_inset

 where 
\begin_inset Formula $\overline{0}$
\end_inset

 is the string of all zeros.
 Similar remarks apply for the 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

 that follow.
\end_layout

\end_inset


\begin_inset Formula 
\[
\mathbb{P}_{0}=\left\{ p|p=\left(p_{k}\right)_{k=1}^{N}\mbox{for }N<\infty\mbox{ and }p_{N}=1\right\} 
\]

\end_inset

and likewise 
\begin_inset Formula $\mathbb{P}_{1}=\neg\mathbb{P}_{0}$
\end_inset

.
 For ease of notation, the subscript can be dropped, to write 
\begin_inset Formula $\mathbb{P}=\mathbb{P}_{0}$
\end_inset

.
 These are the 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

 finite length strings; one gets 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 from 
\begin_inset Formula $\mathbb{P}_{0}$
\end_inset

 by appending an infinite string of zeros.
 Clearly, 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 are isomorphic 
\begin_inset Formula $\mathbb{P}_{0}$
\end_inset

, as are 
\begin_inset Formula $\mathbb{D}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

.
 We may as well give these isomorphisms a name.
 Let 
\begin_inset Formula $\mbox{ext}_{0}:\mathbb{P}_{0}\to\mathbb{D}_{0}$
\end_inset

 be defined by appending the infinite string of zeros.
 The inverse operation is 
\begin_inset Formula $\mbox{trunc}_{0}:\mathbb{D}_{0}\to\mathbb{P}_{0}$
\end_inset

 which truncates the trailing zeros.
 It is unambiguous, because 
\begin_inset Formula $\mbox{len}_{0}$
\end_inset

 is unambiguous.
 Likewise, 
\begin_inset Formula $\mbox{ext}_{1}:\mathbb{P}_{1}\to\mathbb{D}_{1}$
\end_inset

, this time by appending all-ones, and similarly 
\begin_inset Formula $\mbox{trunc}_{1}:\mathbb{D}_{1}\to\mathbb{P}_{1}$
\end_inset

 is defined using 
\begin_inset Formula $\mbox{len}_{1}$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Eventually periodic sequences
\end_layout

\begin_layout Standard
The above constructions generalize to periodic orbits; instead of appending
 zeros or ones to a prefix, one appends a repeating, periodic string.
 Again, we fall into a tedious funk of providing notation for the obvious.
 The definitions that follow are entirely conventional.
\end_layout

\begin_layout Standard
Write 
\begin_inset Formula $\overline{0}$
\end_inset

 for the the infinite string of zeros, so that 
\begin_inset Formula $\overline{0}=\left(b_{k}\right)_{k=1}^{\infty}$
\end_inset

 with 
\begin_inset Formula $b_{k}=0$
\end_inset

 for all 
\begin_inset Formula $k$
\end_inset

.
 Define 
\begin_inset Formula $\overline{1}$
\end_inset

 the infinite string of ones likewise.
 
\end_layout

\begin_layout Standard
The periodic orbits will be chosen as elements taken out of the set of finite
 strings 
\begin_inset Formula 
\[
\mathbb{S}=\left\{ q\vert q=\left(q_{k}\right)_{k=1}^{N}\mbox{for }N<\infty\right\} 
\]

\end_inset

which can be either zero or one-terminated.
 Clearly, 
\begin_inset Formula $\mathbb{P}_{0}\subset\mathbb{S}$
\end_inset

 and 
\begin_inset Formula $\mathbb{P}_{1}\subset\mathbb{S}$
\end_inset

 and 
\begin_inset Formula $\mathbb{S}=\mathbb{P}_{0}\cup\mathbb{P}_{1}$
\end_inset

 so that the complementation involution 
\begin_inset Formula $\neg$
\end_inset

 partitions 
\begin_inset Formula $\mathbb{S}$
\end_inset

 into two equal parts.
\end_layout

\begin_layout Standard
For any 
\begin_inset Formula $q\in\mathbb{S}$
\end_inset

, having length 
\begin_inset Formula $n=\left|q\right|$
\end_inset

, one can define a periodic orbit 
\begin_inset Formula $\overline{q}$
\end_inset

 as 
\begin_inset Formula $\overline{q}=\left(b_{k}\right)_{k=1}^{\infty}$
\end_inset

 where each bit is 
\begin_inset Formula $b_{k}=q_{k\mod n}$
\end_inset

.
 
\end_layout

\begin_layout Standard
This allows 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 to be defined as the set of ultimately-periodic orbits.
 Formally, for each 
\begin_inset Formula $q\in\mathbb{S}$
\end_inset

 one has an associated set of eventually-periodic orbits 
\begin_inset Formula 
\[
\mathbb{D}_{q}=\left\{ p\overline{q}:p\in\mathbb{S}\right\} 
\]

\end_inset

This does not quite preserve the definition of 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbb{D}_{1}$
\end_inset

 from before, although the result is isomorphic.
 The technical issue is that the prefixes for 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbb{D}_{1}$
\end_inset

 were taken from 
\begin_inset Formula $\mathbb{P}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 and not 
\begin_inset Formula $\mathbb{S}$
\end_inset

.
 This issue creates difficulties for the definition of a prefix-length function
 
\begin_inset Formula $\mbox{len}_{q}$
\end_inset

 which we would like to have.
 Similar issues arise if the prefix 
\begin_inset Formula $p$
\end_inset

 just happens to end with 
\begin_inset Formula $q$
\end_inset

.
 This allows double-counting, as exactly the same sequence might appear
 two or more times, with some of the bits being partitioned into the prefix,
 and some to the cyclic part.
 On the surface, this does not seem important, but can be a potential source
 of confusion.
 
\end_layout

\begin_layout Standard
To avoid this awkwardness, define the prefix set
\begin_inset Formula 
\[
\mathbb{P}_{q}=\left\{ p|p=\left(p_{k}\right)_{k=1}^{N}\mbox{for }N<\infty\mbox{ and }\mbox{tail}_{\left|q\right|}\left(p\right)\ne q\right\} 
\]

\end_inset

This makes use of the string tail function 
\begin_inset Formula $b=\left(b_{k}\right)_{k=1}^{n}\mapsto\mbox{tail}_{m}\left(b\right)=\left(b_{k}\right)_{k=n-m}^{n}$
\end_inset

 that removes the leading bits from 
\begin_inset Formula $b$
\end_inset

, leaving only the final 
\begin_inset Formula $m$
\end_inset

 bits.
 Clearly, this is only defined if 
\begin_inset Formula $\left|b\right|>m$
\end_inset

; otherwise, take the result to be the empty set 
\begin_inset Formula $\varnothing$
\end_inset

.
 As before, this definition of 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

 is meant to include the zero-length empty string 
\begin_inset Formula $\varepsilon$
\end_inset

 among it's elements.
 This definition of 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

 does preserve the definition of 
\begin_inset Formula $\mathbb{P}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 from before; its the same definition.
\end_layout

\begin_layout Standard
This allows a definition of 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 without double-counting: 
\begin_inset Formula 
\[
\mathbb{D}_{q}=\left\{ p\overline{q}:p\in\mathbb{P}_{q}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
As before, one can provide explicit isomorphisms 
\begin_inset Formula $\mbox{ext}_{q}:\mathbb{P}_{q}\to\mathbb{D}_{q}$
\end_inset

.
 It also allows an unambiguous definition of 
\begin_inset Formula $\mbox{trunc}_{q}:\mathbb{D}_{q}\to\mathbb{P}_{q}$
\end_inset

 as the leading bits of of 
\begin_inset Formula $b\in\mathbb{D}_{q}$
\end_inset

 that do not end with 
\begin_inset Formula $q$
\end_inset

.
 Similarly,
\begin_inset Formula $\mbox{len}_{q}:\mathbb{D}_{q}\to\mathbb{N}$
\end_inset

 is length of the leading bits, with all trailing instances of 
\begin_inset Formula $q$
\end_inset

 removed.
 
\end_layout

\begin_layout Standard
As before, the cardinality of 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 is 
\begin_inset Formula $\aleph_{0}$
\end_inset

.
 If the first bit of 
\begin_inset Formula $q$
\end_inset

 is a zero, then we have an unambiguous isomorphism between 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

; likewise, if the first bit of 
\begin_inset Formula $q$
\end_inset

 is a one, then we have an unambiguous isomorphism between 
\begin_inset Formula $\mathbb{D}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
 These isomorphisms commute with 
\begin_inset Formula $\mbox{trunc}_{q}$
\end_inset

 so that 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

 and 
\begin_inset Formula $\mathbb{P}_{0}$
\end_inset

 are isomorphic if the first bit of 
\begin_inset Formula $q$
\end_inset

 is a zero, and likewise 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

 and 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 are isomorphic if the first bit of 
\begin_inset Formula $q$
\end_inset

 is a one.
\end_layout

\begin_layout Subsection
Cyclic permutations
\end_layout

\begin_layout Standard
By convention, orbits do not have a unique starting place, and so a proper
 enumeration of orbits would first organize finite binary strings into Lyndon
 words, then define a collection of prefixes that exclude cyclic permutations
 of Lyndon words in the tail, and only then define the set of ultimately-periodi
c sequences for a given orbit.
 This would mirror the above collection of definitions, maodifying them
 as needed.
 For now, there does not seem to be any point in writing this out in detail.
\end_layout

\begin_layout Subsection
The Vitali quotient space
\end_layout

\begin_layout Standard
The above provides more than enough machinery to expand on the sketch of
 the Vitali quotient space given in the introduction.
 The space 
\begin_inset Formula $E_{0}$
\end_inset

 is will be defined as the quotient space 
\begin_inset Formula $E_{0}=\Delta/\mathbb{D}$
\end_inset

, where the cosets are given by all infinite-length binary strings that
 differ at a finite number of locations.
 Just a few more very simple defintions are needed to make this idea fully
 coherent.
 
\end_layout

\begin_layout Standard
The quotient space 
\begin_inset Formula $E_{0}=\Delta/\mathbb{D}$
\end_inset

 is to be written with respect to an equivalence relation 
\begin_inset Formula $\sim$
\end_inset

 such that 
\begin_inset Formula $a\sim b$
\end_inset

 iff 
\begin_inset Formula $a\oplus b\in\mathbb{D}$
\end_inset

 where 
\begin_inset Formula $a\oplus b=\left(a_{k}\oplus b_{k}\right)_{k=1}^{\infty}$
\end_inset

 is the bit-wise compare (alternately, the xor, or the symmetric difference):
 it's zero, if two bits are the same, else it is one.
 Thus, by 
\begin_inset Formula $E_{0}=\Delta/\mathbb{D}$
\end_inset

 it is meant 
\begin_inset Formula $E_{0}=\Delta/\sim$
\end_inset

 for this equivalence relation 
\begin_inset Formula $\sim$
\end_inset

.
 Likewise, define 
\begin_inset Formula $E_{1}=\Delta/\mathbb{D}_{1}$
\end_inset

 where 
\begin_inset Formula $a\sim_{1}b$
\end_inset

 iff 
\begin_inset Formula $a\oplus b\in\mathbb{D}_{1}$
\end_inset

, and 
\begin_inset Formula $E_{q}=\Delta/\mathbb{D}_{q}$
\end_inset

 where 
\begin_inset Formula $a\sim_{q}b$
\end_inset

 iff 
\begin_inset Formula $a\oplus b\in\mathbb{D}_{q}$
\end_inset

.
\end_layout

\begin_layout Standard
One can then walk just a bit further down this path, and consider an equivalence
 relation where two ultimatly periodic sequences are equivalent, if the
 periods are of the same length, and one is a cylic permutation of the other.
 That is, 
\begin_inset Formula $u\approx_{p}v$
\end_inset

 iff 
\begin_inset Formula $u\in\mathbb{D}_{p}$
\end_inset

 and 
\begin_inset Formula $v\in\mathbb{D}_{q}$
\end_inset

 and 
\begin_inset Formula $\left|p\right|=\left|q\right|$
\end_inset

 and 
\begin_inset Formula $p$
\end_inset

 is a cyclic permuation of 
\begin_inset Formula $q$
\end_inset

.
 Under this definition, 
\begin_inset Formula $u\approx_{p}v$
\end_inset

 iff 
\begin_inset Formula $u\approx_{q}v$
\end_inset

.
 The wisdom of doing this, without carefully defining sets of cyclically-permute
d orbits is somewhat questionable, as one does run the risk of double-counting
 some of the sequences.
\end_layout

\begin_layout Standard
An arugment that the 
\begin_inset Formula $E_{q}$
\end_inset

 can be validly called 
\begin_inset Quotes eld
\end_inset

Vitali sets
\begin_inset Quotes erd
\end_inset

 was already made in the introduction.
 A minor expansion of this argument can be made by observing that the cardinalit
y of 
\begin_inset Formula $E_{q}$
\end_inset

 is 
\begin_inset Formula $\aleph_{1}$
\end_inset

 and the cardinality of each coset is 
\begin_inset Formula $\aleph_{0}$
\end_inset

.
 The latter is a trust-worthy conclusion, in part because of the care taken
 to avoid double-counting in 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
 This establishes that the cosets are each strictly isomorphic to 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
\end_layout

\begin_layout Subsection
Total orders
\end_layout

\begin_layout Standard
In order to have further meaningful conversations about 
\begin_inset Formula $E_{q}$
\end_inset

 and it's cosets, we would like to have some means of enumerating the elements
 of 
\begin_inset Formula $E_{q}$
\end_inset

, ideally placing them into some order, and likewise, a way of enumerating
 the elements of any given coset in 
\begin_inset Formula $E_{q}$
\end_inset

, again, ideally by placing them into some order.
 To get to there, we have to step back and look at orders on 
\begin_inset Formula $\Delta$
\end_inset

 and on 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
\end_layout

\begin_layout Standard
The Cantor set is totally ordered.
 That is, for any two 
\begin_inset Formula $a,b\in\Delta$
\end_inset

 one can always determine if 
\begin_inset Formula $a<b$
\end_inset

 by performing a bitwise comparison.
 Define 
\begin_inset Formula $a<b$
\end_inset

 as true, if there exists an integer 
\begin_inset Formula $N$
\end_inset

 such that 
\begin_inset Formula $a_{k}=b_{k}$
\end_inset

 for all 
\begin_inset Formula $k<N$
\end_inset

 and 
\begin_inset Formula $a_{N}=0$
\end_inset

 while 
\begin_inset Formula $b_{N}=1$
\end_inset

.
 If there is no such integer, then we say that 
\begin_inset Formula $a\ge b$
\end_inset

.
 There are several equivalent ways of saying this.
 One is to say that the Cantor space is metrizable, with metric 
\begin_inset Formula $g\left(a,b\right)=1/N$
\end_inset

 where 
\begin_inset Formula $N$
\end_inset

 is the smallest integer for which 
\begin_inset Formula $a_{N}\ne b_{N}$
\end_inset

.
 Equivalently, it is the length (plus one) of the initial run of zeros in
 
\begin_inset Formula $a\oplus b$
\end_inset

.
 We even know what the greatest and least elements of 
\begin_inset Formula $\Delta$
\end_inset

 are: this is easy, they are 
\begin_inset Formula $\overline{0}$
\end_inset

 and 
\begin_inset Formula $\overline{1}$
\end_inset

.
\end_layout

\begin_layout Standard
The total order is inherited by the 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

, where, in some sense, it is 
\begin_inset Quotes eld
\end_inset

even easier
\begin_inset Quotes erd
\end_inset

, mostly because we know that the elements of 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 are of (effectively) finite length.
 Yet, it is also 
\begin_inset Quotes eld
\end_inset

more difficult
\begin_inset Quotes erd
\end_inset

, because 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 does not contain a least element.
 Write 
\begin_inset Formula $0^{(n)}$
\end_inset

 for the string of 
\begin_inset Formula $n$
\end_inset

 zeros.
 Then 
\begin_inset Formula $0^{(n)}1\overline{q}\in\mathbb{D}_{q}$
\end_inset

 for all 
\begin_inset Formula $n$
\end_inset

.
 But the total order, as inherited from 
\begin_inset Formula $\Delta$
\end_inset

, implies that 
\begin_inset Formula $0^{(n)}1\overline{q}<0^{(m)}1\overline{q}$
\end_inset

 whenever 
\begin_inset Formula $n>m$
\end_inset

.
 Worse,
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 is not complete, as the limit point of the sequence 
\begin_inset Formula $0^{(n)}1\overline{q}$
\end_inset

 would seem to be 
\begin_inset Formula $\overline{0}$
\end_inset

 but 
\begin_inset Formula $\overline{0}\notin\mathbb{D}_{q}$
\end_inset

.
 A different issue is that, in saying 
\begin_inset Quotes eld
\end_inset

limit point
\begin_inset Quotes erd
\end_inset

, we assumed that the conventional rules about the limits of sequences should
 be applied, but we haven't yet firmly argued for this.
 Conventional rules apply when things can be metrized, but we are staring
 into the gapeing maw of a monster, and so will be a bit more careful.
\end_layout

\begin_layout Standard
The primary issue is that the bit-wise-defined order on 
\begin_inset Formula $\Delta$
\end_inset

 carries with it some implicit assumptions about distance and convergence.
 Halting comparisons upon the first bit to mis-match makes the implicit
 statement that all later bits do not matter.
 Were they changed in arbitrary ways, one would still have, in some sense,
 that 
\begin_inset Formula $0<\left|a-b\right|$
\end_inset

, which implies the existence of some sort of metric 
\begin_inset Formula $\left|a-b\right|$
\end_inset

.
 It can be taken to be any decreasing function of of 
\begin_inset Formula $N$
\end_inset

, as long as it says that bits later than 
\begin_inset Formula $N$
\end_inset

 do not matter for order comparison, once the first mismatch 
\begin_inset Formula $a_{N}\ne b_{N}$
\end_inset

 has been found.
 This has the implicit side-effect of metrizing the space 
\begin_inset Formula $\Delta$
\end_inset

.
 It also has the implicit effect of defining convergence: some sequence
 converges to a point whenever more and more bits in the sequence match.
 This notion can be done without explicit appeal to a metric, yet it unavoidably
 forces the implicit assumption of one, by saying that points are 
\begin_inset Quotes eld
\end_inset

closer together
\begin_inset Quotes erd
\end_inset

, the more bits match.
 
\end_layout

\begin_layout Standard
Is there anything wrong with this? Well, in the conventional sense, no.
 Writing 
\begin_inset Formula $\left|a-b\right|=2^{-N}$
\end_inset

 just reduces (eventually) to the conventional metric on the reals, the
 conventional open sets, and so forth, topologizing 
\begin_inset Formula $\Delta$
\end_inset

 with the weak topology.
 Yet, the present discussion is attempting to talk about the Vitali set,
 and so topologizing prematurely threatens to ruin the ability to perform
 later inference.
\end_layout

\begin_layout Standard
Fortunately, the lexicographic order is available.
 For this, recall that 
\begin_inset Formula $\mbox{trunc}_{q}:\mathbb{D}_{q}\to\mathbb{P}_{q}$
\end_inset

 is an isomorphism, and the lexicographic order is entirely unproblematic
 for 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

, as long as shorter prefixes preceed longer ones, and only then is the
 bitwise compare performed.
 Write this order as 
\begin_inset Formula $<^{\mbox{lex}}$
\end_inset

.
 Just to be tediously precise, 
\begin_inset Formula $a<^{\mbox{lex}}b$
\end_inset

 iff 
\begin_inset Formula $\left|a\right|<\left|b\right|$
\end_inset

 or if 
\begin_inset Formula $\left|a\right|=\left|b\right|$
\end_inset

 and 
\begin_inset Formula $a<^{\mbox{bit}}b$
\end_inset

 with 
\begin_inset Formula $<^{\mbox{bit}}$
\end_inset

 being the earlier-defined bitwise ordering.
 By isomorphism, 
\begin_inset Formula $<^{\mbox{lex}}$
\end_inset

 is well-defined on both 
\begin_inset Formula $\mathbb{P}_{q}$
\end_inset

 and 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
 It is can be extended to all of 
\begin_inset Formula $\Delta,$
\end_inset

 if the length function 
\begin_inset Formula $\mbox{len}_{q}\left(b\right)=\left|b\right|_{q}$
\end_inset

 is used, so that the length is measured only after removing a trailing
 
\begin_inset Formula $\overline{q}$
\end_inset

, if any.
 There will only be a countable number of 
\begin_inset Formula $b\in\Delta$
\end_inset

 with a trailing 
\begin_inset Formula $\overline{q}$
\end_inset

, these are precisely the strings in 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
 For all the othr (uncountably many) infinite-length strings, use the bitwise
 compare 
\begin_inset Formula $<^{\mbox{bit}}$
\end_inset

 just as before.
 This extends 
\begin_inset Formula $<_{q}^{\mbox{lex}}$
\end_inset

 to all of 
\begin_inset Formula $\Delta$
\end_inset

.
 The subscript 
\begin_inset Formula $q$
\end_inset

 is used once again to remind us that 
\begin_inset Formula $\mbox{len}_{q}$
\end_inset

 is to be used for measuring length for the lexicographic sorting.
 The ordering 
\begin_inset Formula $<_{q}^{\mbox{lex}}$
\end_inset

 has the interesting property that it places all of 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 before any string not in 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
\end_layout

\begin_layout Standard
The ordering 
\begin_inset Formula $<_{q}^{\mbox{lex}}$
\end_inset

 is well-founded on 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

, in that the minimum element 
\begin_inset Formula $\overline{q}\in\mathbb{D}_{q}$
\end_inset

 and all other elements in 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 are no more than a finite number of steps above 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

.
 Specifically, they are all 
\begin_inset Formula $\mbox{len}_{q}$
\end_inset

 steps away, and, of course 
\begin_inset Formula $\mbox{len}_{q}\overline{q}=0$
\end_inset

.
 By contrast, it is not well-founded on 
\begin_inset Formula $\Delta$
\end_inset

; all elements in 
\begin_inset Formula $\Delta$
\end_inset

 but not in 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 are at least a countably infinite number of steps away, and usually more.
 The bitwise order 
\begin_inset Formula $<^{\mbox{bit}}$
\end_inset

 is not well-founded; in particular, it places an uncountably infinite number
 of elements underneath 
\begin_inset Formula $\overline{q}$
\end_inset

.
\end_layout

\begin_layout Subsection
Orders on the Vitali set
\end_layout

\begin_layout Standard
Neither of the orders discussed above extend easily or naturally to either
 
\begin_inset Formula $E_{q}$
\end_inset

 or any of it's cosets.
 Consider first the case of some coset 
\begin_inset Formula $\gamma\in E_{q}$
\end_inset

.
 It has a countable number of elements, but the bit-order 
\begin_inset Formula $<^{\mbox{bit}}$
\end_inset

 cannot be used to find a least element, since the order may converge to
 a limit point outside of the coset.
 The lexicographic order 
\begin_inset Formula $<_{q}^{\mbox{lex}}$
\end_inset

 cannot be applied, since all strings appear to be of intinite length to
 
\begin_inset Formula $\mbox{len}_{q}$
\end_inset

.
 From the point of view of 
\begin_inset Formula $\mbox{len}_{q}$
\end_inset

, the strings in 
\begin_inset Formula $\gamma$
\end_inset

 seem to be 
\begin_inset Quotes eld
\end_inset

encrypted
\begin_inset Quotes erd
\end_inset

: they are elements of 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 that have been xor'ed with some unknown 
\begin_inset Formula $u\in\gamma$
\end_inset

.
 That is to say, if one were to select some specific 
\begin_inset Formula $u\in\gamma$
\end_inset

 (thus applying the axiom of choice), then all other 
\begin_inset Formula $v\in\gamma$
\end_inset

 could be 
\begin_inset Quotes eld
\end_inset

decrypted
\begin_inset Quotes erd
\end_inset

 by computing 
\begin_inset Formula $u\oplus v\in\mathbb{D}_{q}$
\end_inset

.
 Each selection of 
\begin_inset Formula $u\in\gamma$
\end_inset

 provides a distinct mapping 
\begin_inset Formula $u:\gamma\to\mathbb{D}_{q}$
\end_inset

 given by 
\begin_inset Formula $u:v\mapsto u\oplus v$
\end_inset

.
 There are a countable number of such mappings, they are clearly all inequivalen
t; the points in the coset can be distinguished from one another, but they
 cannot be labelled without selecting an order, and selecting an order requires
 selecting a distinguished 
\begin_inset Formula $u\in\gamma$
\end_inset

, bringing us back to th axiom of choice.
\end_layout

\begin_layout Standard
There is another, distinct possiblity.
 Suppose the quotient was being constructed 
\begin_inset Quotes eld
\end_inset

alogorithmically
\begin_inset Quotes erd
\end_inset

, one point at a time.
 Then, perhaps, the very first point to be added to a coset could serve
 as the distinguished label 
\begin_inset Formula $u$
\end_inset

.
 Later points do not even have to be added, since 
\begin_inset Formula $\gamma=u\oplus\mathbb{D}_{q}$
\end_inset

 and so simply having one distinguised point in the coset is enough to define
 the entire coset.
 Is such an 
\begin_inset Quotes eld
\end_inset

algorithm
\begin_inset Quotes erd
\end_inset

 achievable? In the narrow sense, no, snce clearly conventional finite algorithm
s cannot enumerate uncountable sets.
 Let's ignore this minor inconvenience for a moment, and assume it was possible,
 for some suitably defined uncountably-long runtime.
 The goal of such an algorithm is to enumerate the cosets; for that to happen,
 it would seem that there needs to be a way of enumerating the elements
 of 
\begin_inset Formula $\Delta$
\end_inset

 first.
 The total order provided by 
\begin_inset Formula $<^{\mbox{bit}}$
\end_inset

 cannot be used.
 The first element is the least element 
\begin_inset Formula $\overline{0}$
\end_inset

, but what is the next element?
\end_layout

\begin_layout Standard
A more interesting case is provided by using the ergodic properties of the
 Bernoulli shift when applied to the Cantor set.
 The Bernoulli shift is the shift operator 
\begin_inset Formula $T:\Delta\to\Delta$
\end_inset

 acting on individual points as 
\begin_inset Formula $T:\left(b_{k}\right)_{k=1}^{\infty}\mapsto\left(b_{k}\right)_{k=2}^{\infty}$
\end_inset

.
 The shift is ergodic in all the conventional definitions of ergodicity.
 For the present purposes, it can be employed as a generator of candidate
 cosets.
 Select a point 
\begin_inset Formula $b\in\Delta$
\end_inset

 
\begin_inset Quotes eld
\end_inset

at random
\begin_inset Quotes erd
\end_inset

.
 This has two issues: what do we mean by 
\begin_inset Quotes eld
\end_inset

select
\begin_inset Quotes erd
\end_inset

? The axiom of choice, certainly.
 What do we mean by 
\begin_inset Quotes eld
\end_inset

at random
\begin_inset Quotes erd
\end_inset

? Chosen from the uniform distribution on 
\begin_inset Formula $\Delta$
\end_inset

.
 But defining such a distribution requires defining a measure on 
\begin_inset Formula $\Delta$
\end_inset

, which requires defining Borel sets on 
\begin_inset Formula $\Delta$
\end_inset

, which requires topologizing 
\begin_inset Formula $\Delta$
\end_inset

 sufficiently to define the open sets that will become elements of 
\begin_inset Formula $\Sigma_{1}^{0}$
\end_inset

 of the Borel hierarchy.
 All this can be done; the required topologization is provided by the bitwise
 metric given by the first miscompare, when comparing two bit-strings.
 This provides the conventional weak topology on 
\begin_inset Formula $\Delta$
\end_inset

, and the rest flows downhill.
 
\end_layout

\begin_layout Standard
With these tools, one proceeds to generate sequences of candidate points.
 The algorithm is as follows: select a point 
\begin_inset Formula $p\in\Delta$
\end_inset

 and then iterate to obtain other points 
\begin_inset Formula $T^{k}p$
\end_inset

.
 Then, if 
\begin_inset Formula $\left(T^{k+1}p\right)\oplus\left(T^{k}p\right)\notin\mathbb{D}_{q}$
\end_inset

, write 
\begin_inset Formula $u^{\left(k+1\right)}=T^{k+1}p$
\end_inset

 as the new, unique label for a coset 
\begin_inset Formula $\gamma=\gamma^{\left(u\right)}$
\end_inset

.
 Due to the nature of the uniform distribution on 
\begin_inset Formula $\Delta$
\end_inset

, it will almost certainly be the case that the randomly selected point
 
\begin_inset Formula $p\in\Delta$
\end_inset

 is ergodic.
 In the present case, this means that it will almost certainly be the case
 that 
\begin_inset Formula $T^{m+n}p\oplus T^{n}p\notin\mathbb{D}_{q}$
\end_inset

 for all non-negative integers 
\begin_inset Formula $m,n$
\end_inset

.
 This is a slightly sronger statement than the conventional defintion of
 ergodicity, so I suppose I should prove that it is true.
 For now, I assume that it is true, and that proving it would be another
 tedious exercise.
 At any rate, running this loop once will generate at most a countable number
 of cosets 
\begin_inset Formula $u^{\left(k\right)}$
\end_inset

.
 It still required the axiom of choice; only that the burden was shifted
 from choosing base-points 
\begin_inset Formula $u\in\gamma$
\end_inset

 for each poset 
\begin_inset Formula $\gamma\in E_{q}$
\end_inset

, to chosing an initial random 
\begin_inset Formula $p\in\Delta$
\end_inset

.
 No matter.
 Only a countable number of cosets 
\begin_inset Formula $u^{\left(k\right)}$
\end_inset

 were generated, and thus the loop has to be run again, starting with a
 new randomly-chosen 
\begin_inset Formula $p\in\Delta$
\end_inset

, 
\emph on
ad infinitum
\emph default
, for an uncountable number of iterations of the outer loop.
 This time, taking care to verify that each new coset is distinct from all
 the previously generated ones.
 Of course, this will be the case almost certainly.
 The check can be avoided by instead verifing that 
\begin_inset Formula $p\oplus p_{\alpha}\notin\mathbb{D}_{q}$
\end_inset

 for all previously selected points 
\begin_inset Formula $p_{\alpha}$
\end_inset

.
 At any rate, we've described a process that requires algorithms that somehow
 run for uncountaly-long periods of time, and the algo still has not magically
 evaded the axiom of choice.
 This is a good time to just give up.
\end_layout

\begin_layout Standard
The above does reveal a minor curiosity, though: if the above algo is terminated
 in finite time, then the resulting set of 
\begin_inset Formula $u^{\left(k\right)}$
\end_inset

 are uniformly distributed across the unit interval.
 This follows from the random draw of 
\begin_inset Formula $p$
\end_inset

 from a uniform distribution.
 As this finite set of 
\begin_inset Formula $u^{\left(k\right)}$
\end_inset

 can be given the counting measure, one must conclude that the non-measurability
 of the Vitali set must come from repeating the construction into the limit.
 But of course! This will be reviewed in the next section.
 
\end_layout

\begin_layout Standard
What about 
\begin_inset Formula $E_{q}$
\end_inset

? Given that each coset 
\begin_inset Formula $\gamma\in E_{q}$
\end_inset

 carries a unique, distinguised label 
\begin_inset Formula $u\in\gamma\subset\Delta$
\end_inset

, it should be clear that all of the cosets 
\begin_inset Formula $\gamma$
\end_inset

 can be totally ordered by using the bitwise total order 
\begin_inset Formula $<^{\mbox{bit}}$
\end_inset

 on the collection of 
\begin_inset Formula $u$
\end_inset

.
\end_layout

\begin_layout Subsection
The Vitali set measureability paradox
\end_layout

\begin_layout Standard
It is time to recap the core argument for the measureability of the Vitali
 set.
 One starts with the Cantor space 
\begin_inset Formula $\Delta$
\end_inset

 and assigns a total measure of one to it.
 The quotient 
\begin_inset Formula $E_{q}=\Delta/\mathbb{D}_{q}$
\end_inset

 shatters it into an uncountable number of cosets (cardinalty 
\begin_inset Formula $\aleph_{1}$
\end_inset

), each labelled by a unique string 
\begin_inset Formula $u\in\Delta$
\end_inset

.
 The construction forces that each such label is distinct: for all label
 pairs 
\begin_inset Formula $u,v$
\end_inset

 one has that 
\begin_inset Formula $u\oplus v\notin\mathbb{D}_{q}$
\end_inset

.
 This allows an entire coset to be exhibited as 
\begin_inset Formula $u\oplus\mathbb{D}_{q}$
\end_inset

.
 Since 
\begin_inset Formula $\mathbb{D}_{q}$
\end_inset

 is countable (i.e.
 having cardinality 
\begin_inset Formula $\aleph_{0})$
\end_inset

, it can be indexed with integers.
 The indexing can be made explicit: for each 
\begin_inset Formula $d\left(m,n\right)\in\mathbb{D}_{q}$
\end_inset

 just define 
\begin_inset Formula $k=m+2^{n}$
\end_inset

.
 Recall how these elements were defined: the length 
\begin_inset Formula $\mbox{len}_{q}d\left(m,n\right)=n$
\end_inset

, and there are exactly 
\begin_inset Formula $2^{n}$
\end_inset

 finite strings of length exactly 
\begin_inset Formula $n$
\end_inset

; these are labelled with 
\begin_inset Formula $0\le m<2^{n}$
\end_inset

.
 These are in one-to-one correspondence with the dyadic rationals 
\begin_inset Formula $\left(2m+1\right)/2^{n+1}$
\end_inset


\end_layout

\begin_layout Standard
Each distinct label is assigned to a distinct Vitali set 
\begin_inset Formula $V_{k}$
\end_inset

, so that 
\begin_inset Formula 
\[
V_{q;k}=\bigcup_{u\in E_{q}}u\oplus d\left(m,n\right)
\]

\end_inset

is a set of disjoint points.
 Disjoint, simply because we've never created any topology, so disjoint
 by default.
 Each set is also pair-wise disjoint: 
\begin_inset Formula $V_{q;j}\cap V_{q;k}=\varnothing$
\end_inset

 for each pair of integers 
\begin_inset Formula $j\ne k$
\end_inset

.
\end_layout

\begin_layout Standard
.By construction 
\begin_inset Formula 
\[
\Delta=\bigcup_{k=0}^{\infty}V_{q;k}
\]

\end_inset

as the pointwise union.
 Every point in 
\begin_inset Formula $\Delta$
\end_inset

 was carefully accounted for, in this construction.
 More specificly, each and every possible infinite string of binary digits
 
\begin_inset Formula $b\in\Delta$
\end_inset

 has been assigned to one and only one 
\begin_inset Formula $V_{q;k}$
\end_inset

.
 There are no extras, there are no duplicates or double-counting.
\end_layout

\begin_layout Standard
The conventional argument proves the non-measurability of each 
\begin_inset Formula $V_{q;k}$
\end_inset

 with an argument by contradiction.
 Assume there exists a measure 
\begin_inset Formula $\mu$
\end_inset

 such that 
\begin_inset Formula $\mu\left(\Delta\right)=1$
\end_inset

 and 
\begin_inset Formula $\mu\left(V_{q;k}\right)=\epsilon_{k}>0$
\end_inset

.
 Since all 
\begin_inset Formula $V_{q;k}$
\end_inset

 are of the same size, being isomorphic to one-another, the measures must
 all be equal: 
\begin_inset Formula $\epsilon_{k}=\epsilon$
\end_inset

.
 One then concludes that 
\begin_inset Formula 
\begin{align*}
1= & \mu\left(\Delta\right)\\
= & \mu\left(\bigcup_{k=0}^{\infty}V_{q;k}\right)\\
= & \sum_{k=0}^{\infty}\mu\left(V_{q;k}\right)\\
= & \sum_{k=0}^{\infty}\epsilon_{k}\\
= & \omega\epsilon
\end{align*}

\end_inset

Clearly, there is no real number 
\begin_inset Formula $\epsilon$
\end_inset

 that can preserve this identity; thus, one concludes that each individual
 Vitali set 
\begin_inset Formula $V_{q;k}$
\end_inset

 is unmeasurable.
\end_layout

\begin_layout Standard
Written in this way, it is also clear that non-standard analysis, using
 hyperreal numbers, avoids this ugly fate: just set 
\begin_inset Formula $\epsilon=1/\omega$
\end_inset

 as the infinitessimal, and the problem goes away.
 Of course, this opens up a can of worms: what are the hyperreals, and what
 are their properties? How do they behave? Is this a legitimate and valid
 construction? As I have no desire to write a textbook on the hyperreals,
 the short answer is, yes, everything is just fine.
 Here, 
\begin_inset Formula $\epsilon$
\end_inset

 is just an infinitessimal; it behaves just like any other number, and doesn't
 present any particular challenges.
 One can go farther, and use the surreals as well, although this is not
 strictly called for, at this point.
 Again, there's no particular problem, here.
\end_layout

\begin_layout Standard
There is also an alternative interpretation, given in the next section.
\end_layout

\begin_layout Subsection
Scaling and the Renormalization Group
\end_layout

\begin_layout Standard
An earlier section attempted to provide an algorithmic construction of the
 Vitali set, albeit with algorithms that might take an uncountably long
 time to run.
 The construction founders on technical details, but not before noting that
 a finite approximation can be acheived.
 The finite approximation can be used as a stand-in for the infinite limit.
 Increasing the size/length of the finite approximation by a factor of 
\begin_inset Formula $\alpha$
\end_inset

 causes assorted quantities to scale as a function of 
\begin_inset Formula $\alpha$
\end_inset

.
 These can be renormalized, by rewriting newly scaled quantities in terms
 of the old.
 This can be done arbitrarily, thus presenting the idea of a renormalization
 group.
 Using the renormalization group allows one to always work with finite quantitie
s, which behave exactly as they should, even if the limit was taken.
 Thus, one does not have to deal with the 
\begin_inset Quotes eld
\end_inset

actual infinite
\begin_inset Quotes erd
\end_inset

, but only with the 
\begin_inset Quotes eld
\end_inset

potential infinite
\begin_inset Quotes erd
\end_inset

.
 This is just a trick, a sleight of hand, but appears to be consistent.
 Or rather, should be consistent; consistency would need to be proved.
 At the time of writing, I see no reason to doubt the validity and consistency;
 I'm not expecting dragons here; everything is finite, everything scales.
\end_layout

\begin_layout Standard
The procedure is simple, to the point of silliness; the big word above are
 used only to shock the reader into taking a more principaled approach.
\end_layout

\begin_layout Standard
It works like so.
 Asource of random binary digits was identified.
 In the present case, a pseudo-random generator will do; it generates bits
 of sufficient quality that they offer no impediment to numerical algorithms.
 These are used to generate a sequence of values 
\begin_inset Formula $u$
\end_inset

 that are interpreted as the indicator elements of the Vitali cosets.
 That they are numerically distinct can be readily checked.
 But what does this really mean? Suppose one has two random 32-bit integers
 
\begin_inset Formula $u,v$
\end_inset

 Computing the xor 
\begin_inset Formula $u\oplus v$
\end_inset

 is trivial: some other 32-bit integer results.
 The theory insists that one must have 
\begin_inset Formula $u\oplus v\notin\mathbb{D}_{0}$
\end_inset

.
 where, for now, take 
\begin_inset Formula $q=0$
\end_inset

 just to keep the discussion simple.
 Clearly 
\begin_inset Formula $u\oplus v$
\end_inset

 is just some 32-bit integer; it is clearly in 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 simply by rescaling by 
\begin_inset Formula $2^{32}$
\end_inset

.
 This would seem to violate the base requirement of the construction.
 Well, not really.
 Set 
\begin_inset Formula $N=32$
\end_inset

 as the physical scale, but set 
\begin_inset Formula $M<N$
\end_inset

 as the 
\begin_inset Quotes eld
\end_inset

computational scale
\begin_inset Quotes erd
\end_inset

.
 For the present example, 
\begin_inset Formula $M=22$
\end_inset

 seems like a reasonably adequate scale to work with.
 Then, the requirement that 
\begin_inset Formula $u\oplus v\notin\mathbb{D}_{0}$
\end_inset

 translates into the idea that bits 23-32 are not zero.
 That is, all bits from 
\begin_inset Formula $M$
\end_inset

 to 
\begin_inset Formula $N$
\end_inset

 lie in the 
\begin_inset Quotes eld
\end_inset

scaling continuum
\begin_inset Quotes erd
\end_inset

.
 If we have a number 
\begin_inset Formula $x$
\end_inset

 and discover that bits 23-32 are all zero, we conclude that 
\begin_inset Formula $x\in\mathbb{D}_{0}$
\end_inset

, else assume 
\begin_inset Formula $x\notin\mathbb{D}_{0}$
\end_inset

.
 Since there are 10 bits between 23 and 32, the chance that a random number
 is dyadic becomes one in 
\begin_inset Formula $2^{10}\approx10^{3}$
\end_inset

.
 That is, the chance of being wrong, and of accidentally misclassifying
 a real number as a dyadic rational is about 1 in a thousand.
 The chance of mis-classyifying in the opposite direction is zero: any the
 dyadic rational have bits 23-32 all zero, and there is no chance of accidentall
y getting that wrong.
\end_layout

\begin_layout Standard
Consider now the act of simulating the Vitali set.
 With the above parameter choices, we are allowed a total of 
\begin_inset Formula $2^{N}\approx4\times10^{9}$
\end_inset

 distinct real numbers, and so we conclude that 
\begin_inset Formula $\omega=N=32$
\end_inset

 at this computational scale.
 Not very large! If exactly the same representational system is used to
 represent the dyadic rationals, then we can have 
\begin_inset Formula $2^{M}\approx4\times10^{6}$
\end_inset

 distinct dyadics.
 This follows only because dyadics smaller than 
\begin_inset Formula $2^{-M}$
\end_inset

 cannot be distinguished from reals.
 Put differently, the size of 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 is 
\begin_inset Formula $2^{M}$
\end_inset

.
 Since the size of 
\begin_inset Formula $\mathbb{D}_{0}$
\end_inset

 is supposed to be 
\begin_inset Formula $\omega$
\end_inset

, we have a clashing estimate that 
\begin_inset Formula $\omega=2^{M}\gg N$
\end_inset

.
 What is the size of each Vitali set? By construction, it is of size 
\begin_inset Formula $\epsilon=1/\left|\mathbb{D}_{0}\right|=2^{-M}$
\end_inset

.
 From the nonstandard analysis, we concluded that 
\begin_inset Formula $\omega\epsilon=1$
\end_inset

 and so again 
\begin_inset Formula $\omega=2^{M}$
\end_inset

.
\end_layout

\begin_layout Standard
The above considerations indicate that there are two independent scaling
 factors: 
\begin_inset Formula $\mathfrak{c}=2^{N}$
\end_inset

 and 
\begin_inset Formula $\omega=2^{M}$
\end_inset

 and that it is a mistake to conflate 
\begin_inset Formula $\log_{2}\mathfrak{c}$
\end_inset

 with 
\begin_inset Formula $\omega$
\end_inset

.
 To have renormalization work correctly, these need to be tracked distinctly.
 In the scaling limit, we want to arrive at 
\begin_inset Formula $\mathfrak{c}=2^{\omega}$
\end_inset

 as the limit, and so, for 
\begin_inset Formula $N=32$
\end_inset

, setting 
\begin_inset Formula $M=5$
\end_inset

 would preserve the scaling.
 For 
\begin_inset Formula $N=64,$
\end_inset

one has 
\begin_inset Formula $M=6$
\end_inset

 which really shows just how small a 
\begin_inset Quotes eld
\end_inset

set of measure zero
\begin_inset Quotes erd
\end_inset

 really is, in gut-sense terms.
 For practical calculations, there is no particular reason to adhere to
 the scaling limit; who wants to count up to only 32 or 64? It's OK to have
 
\begin_inset Quotes eld
\end_inset

too many dyadics
\begin_inset Quotes erd
\end_inset

 with respect to the real numbers, as long as one is aware of this, and
 adjusts scales appropriately.
\end_layout

\begin_layout Standard
So ...
\end_layout

\begin_layout Section
Meta-commentary
\end_layout

\begin_layout Standard
The above struggles with deeper questions that are well-researched and 
\begin_inset Quotes eld
\end_inset

well-known
\begin_inset Quotes erd
\end_inset

.
 A quick list:
\end_layout

\begin_layout Itemize
The compactness properties of subsets of the Cantor space lead to understandings
 of the ultrafilter lemma, equivalently the Boolean prime ideal theorem,
 both of which provide a weaker form of the axiom of choice.
\end_layout

\begin_layout Itemize
The sets 
\begin_inset Formula $E_{q}$
\end_inset

 can be understood as 
\begin_inset Quotes eld
\end_inset

the smallest Borel equivalence relation (smallest, in the order of Borel
 reducibility) that does not admit a Borel function giving a real-valued
 complete invariant for the equivalence relation
\begin_inset Quotes erd
\end_inset

 (aka the Vitali set).
 Keywords here are the Glimm–Effros dichotomy, the Luzin–Novikov theorem
 and the Feldman–Moore theorem
\end_layout

\begin_layout Section*
Appendix
\end_layout

\begin_layout Standard
Some random related remarks that involve things well-known and quite conventiona
l.
 A review
\emph on
 ad nauseum
\emph default
.
\end_layout

\begin_layout Standard
The Cantor space 
\begin_inset Formula $2^{\omega}$
\end_inset

 is the space in which the discrete points are infintely-long strings of
 binary digits.
 The Baire space 
\begin_inset Formula $\mathcal{N}=\mathbb{N}^{\omega}=\omega^{\omega}$
\end_inset

 is the space of infinite-length strings of the natural numbers, where 
\begin_inset Quotes eld
\end_inset

natural
\begin_inset Quotes erd
\end_inset

 is defined as positive integers (so zero is not included.) A key idea is
 that these two spaces can be placed in one-to-one correspondence with each
 other, using a run-length encoding.
 This is the run-length encoding that corresponds to the Minkowski Question
 Mark function.
 Thus, most statements about one will apply to the other space, as well.
\end_layout

\begin_layout Standard
This appendix collects a random collection of conventional factoids about
 these spaces.
\end_layout

\begin_layout Subsection*
The discrete topology
\end_layout

\begin_layout Standard
Both spaces have a discrete topology, which is extremely fine.
 This makes both of them into discrete spaces.
 Some factoids:
\end_layout

\begin_layout Itemize
The topological dimension of any discrete space is zero.
\end_layout

\begin_layout Itemize
The discrete metric on any discrete space is 
\begin_inset Formula $\rho\left(x,y\right)=1$
\end_inset

 if 
\begin_inset Formula $x\ne y$
\end_inset

 else 
\begin_inset Formula $\rho\left(x,y\right)=0$
\end_inset

 if 
\begin_inset Formula $x=y$
\end_inset

.
 This metric means the points are always isolated.
\end_layout

\begin_layout Itemize
With the above metric, the space is uniformly discrete, in that it has a
 packing radius of 
\begin_inset Formula $1/2$
\end_inset

 and a covering radius of 
\begin_inset Formula $1$
\end_inset

.
 Spaces with a finite covering radius are said to be 
\begin_inset Quotes eld
\end_inset

relatively dense
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
The points of any discrete space are always clopen.
\end_layout

\begin_layout Itemize
It is not compact, as there is no finite open cover.
 More vaguely, it has no cluster points.
\end_layout

\begin_layout Itemize
It is bounded.
 It is complete.
\end_layout

\begin_layout Itemize
The Baire and Cantor spaces are homeomorphic under the diiscrete topology,
 which follows from the idea that any two discrete subspaces with the same
 cardinality are homeomorphic.
 This is not deep, though, as the open sets are just the points, and the
 homeomorphism is just a one-to-one correspondence of the points.
 The run-length encoding of the Minkowski question mark provides the desired
 one-to-one correspondance.
\end_layout

\begin_layout Itemize
Every discrete space is first-countable.
 But this is a shallow statement: it follows from each point being open,
 and thus being it's own neighborhood.
 Alternately, every countable product of first-countable spaces is first-countab
le.
\end_layout

\begin_layout Itemize
Neither space is second-countable.
 Neither space is seperable.
\end_layout

\begin_layout Standard
More can be said, following from the properties of discrete spaces, but
 this does not obviously lead to any interesting statements.
\end_layout

\begin_layout Subsection*
The usual topology
\end_layout

\begin_layout Standard
The usual topology on the Cantor and Baire spaces consists of clopen sets.
 
\end_layout

\begin_layout Standard
Some factoids:
\end_layout

\begin_layout Itemize
The base of topology is given by finite strings, followed by don't-care
 markers.
\end_layout

\begin_layout Itemize
Finite unions of finite strings are finite trees (binary trees, in the case
 of Cantor space).
\end_layout

\begin_layout Itemize
Countable unions of open sets are open.
 Some curious examples in a subsection below.
 
\end_layout

\begin_layout Itemize
net filter The sequence of open
\end_layout

\begin_layout Itemize
Both spaces are second-countable, meaning that they both have a topology
 with a countable base.
\end_layout

\begin_layout Itemize
Both have 
\end_layout

\begin_layout Itemize
ultrafilters???
\end_layout

\begin_layout Subsection*
Convergence to points
\end_layout

\begin_layout Standard
The section below uses a lot of hot air to construct a perfectly trivial
 example.
 I'm not sure why I bothered.
\end_layout

\begin_layout Standard
Working with the Cantor space, consider the tree 
\begin_inset Formula $Z=\bigcup_{k=0}^{\infty}0^{k}1$
\end_inset

 where 
\begin_inset Formula $0^{k}$
\end_inset

 is a string of 
\begin_inset Formula $k$
\end_inset

 zeros in a row.
 Clearly, 
\begin_inset Formula $Z\subset\mathbb{P}_{0}$
\end_inset

 with 
\begin_inset Formula $\text{\ensuremath{\mathbb{P}_{0}}}$
\end_inset

 as defined earlier.
 It corresponds to a union of open sets, none of which contain 
\begin_inset Formula $\overline{0}$
\end_inset

 but do encroach upon it.
\end_layout

\begin_layout Standard
As before, write the set of all finite strings as
\begin_inset Formula 
\[
\mathbb{S}=\left\{ q\vert q=\left(q_{k}\right)_{k=1}^{N}\mbox{for }N<\infty\right\} \cup\varepsilon
\]

\end_inset

and define 
\begin_inset Formula $\mbox{ext}:\mathbb{S}\to\Delta$
\end_inset

 as the extension of any finite string by 
\begin_inset Formula $\overline{*}$
\end_inset

 with 
\begin_inset Formula $*=\left\{ 0\right\} \cup\left\{ 1\right\} $
\end_inset

 being the 
\begin_inset Quotes eld
\end_inset

don't care
\begin_inset Quotes erd
\end_inset

 wildcard marker.
 It maps finite strings to open sets.
 With the convetional measure 
\begin_inset Formula $\mu$
\end_inset

 on the Cantor space, one has 
\begin_inset Formula $\mu\left(\mbox{ext}s\right)=2^{-\mbox{len}s}$
\end_inset

 for all 
\begin_inset Formula $s\in\mathbb{S}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Write 
\begin_inset Formula $z_{k}=0^{k}1$
\end_inset

 so that 
\begin_inset Formula $Z=\bigcup_{k=0}^{\infty}z_{k}$
\end_inset

.
 Note that 
\begin_inset Formula $z_{k}\cap z_{j}=\varnothing$
\end_inset

 whenver 
\begin_inset Formula $j\ne k$
\end_inset

.
 Note that 
\begin_inset Formula $\mu\left(z_{k}\right)=2^{-\left(k+1\right)}$
\end_inset

.
 Thus we conclude 
\begin_inset Formula 
\[
\mu\left(Z\right)=\sum_{k=0}^{\infty}\mu\left(z_{k}\right)=\sum_{k=0}^{\infty}2^{-\left(k+1\right)}=1
\]

\end_inset

Well, this identifies 
\begin_inset Formula $Z=\Delta\backslash\overline{0}$
\end_inset

, that is, all of Cantor space, minus one point.
 
\end_layout

\begin_layout Standard
The construction extends for any 
\begin_inset Formula $p\in\Delta$
\end_inset

.
 Define a sequence of open neighborhoods 
\begin_inset Formula $P_{k}$
\end_inset

 that converge to 
\begin_inset Formula $p.$
\end_inset

 These are built built from finite strings 
\begin_inset Formula $\left\lfloor p\right\rfloor _{k}$
\end_inset

, where 
\begin_inset Formula $\left\lfloor p\right\rfloor _{k}$
\end_inset

 is defined as the first 
\begin_inset Formula $k$
\end_inset

 letters in the infinite string 
\begin_inset Formula $p$
\end_inset

.
 The corresponding tree is then 
\begin_inset Formula $P=\bigcup_{k=0}^{\infty}\mbox{ext}\left\lfloor p\right\rfloor _{k}$
\end_inset

.
 As before, this gives us 
\begin_inset Formula $P=\Delta\backslash p$
\end_inset

.
\end_layout

\begin_layout Subsection*
The map to the reals.
\end_layout

\begin_layout Standard
First, a review
\emph on
 ad nauseum
\emph default
.
 The canonical mapping of the Cantor set 
\begin_inset Formula $\Delta$
\end_inset

 to the closed unit interval 
\begin_inset Formula $0\le x\le1$
\end_inset

 of the reals 
\begin_inset Formula $x\in\mathbb{R}$
\end_inset

 is given by
\begin_inset Formula 
\[
x=x\left(b\right)=\sum_{k=1}^{\infty}b_{k}2^{-k}
\]

\end_inset

where an abuse of notation was used to write 
\begin_inset Formula $x:\Delta\to\mathbb{R}$
\end_inset

 with 
\begin_inset Formula $x:b\mapsto x\left(b\right)$
\end_inset

.
 As usual, every dyadic rational 
\begin_inset Formula $d=d\left(m,n\right)=\left(2m+1\right)/2^{n}$
\end_inset

 maps back to two binary different strings, one ending in all zeros, and
 one ending in all ones.
 Specifically, if 
\begin_inset Formula $\left|b\right|=n$
\end_inset

 then 
\begin_inset Formula $b=\left(b_{1},b_{2,}\cdots,b_{n-1},1,0,0,\cdots\right)$
\end_inset

 is paired with 
\begin_inset Formula $\overline{b}=\left(b_{1},b_{2,}\cdots,b_{n-1},0,1,1,\cdots\right)$
\end_inset

 with the property that 
\begin_inset Formula $x\left(b\right)=x\left(\overline{b}\right)=d\left(m,n\right)$
\end_inset

 with 
\begin_inset Formula $m=\sum_{k=1}^{n-1}b_{k}2^{k}$
\end_inset

.
\end_layout

\begin_layout Standard
bug-eyed line, each dyadic rational is bug-eyed.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $V_{0}$
\end_inset

 be the image of 
\begin_inset Formula $E_{0}=\Delta/\mathbb{D}$
\end_inset

 under this mapping.
\end_layout

\begin_layout Standard
under this mappingUnder this mapping
\end_layout

\begin_layout Subsection*
The shift operator and ergodicity
\end_layout

\begin_layout Subsection*
Baire space
\end_layout

\begin_layout Standard
First, define the Baire space 
\begin_inset Formula $\mathcal{N}=\omega^{\omega}$
\end_inset

 to be the space of infinite-length strings of the natural numbers, where
 
\begin_inset Quotes eld
\end_inset

natural
\begin_inset Quotes erd
\end_inset

 is defined as positive integers (so zero is not included.) There is a canonical
 run-length encoding that maps 
\begin_inset Formula $\mathcal{N}$
\end_inset

 to the Cantor space 
\begin_inset Formula $\Delta$
\end_inset

, given by the Minkowski question mark function.
 Now, conventionally, the question mark is defined on the reals; for the
 present, by abuse of notation, lets use the same name for the run-length
 encoding.
 Thus, given 
\begin_inset Formula $a=\left[a_{1},a_{2},\cdots\right]\in\mathcal{N}$
\end_inset

 write 
\begin_inset Formula $b=?\left(a\right)\in\Delta$
\end_inset

 as the binary string which consists of 
\begin_inset Formula $a_{1}$
\end_inset

 zeros followed by 
\begin_inset Formula $a_{2}$
\end_inset

 ones, etc.
 This is the run-length encoding.
\end_layout

\begin_layout Standard
The canonical mapping of Baire space 
\begin_inset Formula $\mathcal{N}$
\end_inset

 into a subset of the unit interval is the continued fraction mapping 
\begin_inset Formula 
\[
y=y\left(a\right)=y\left(\left[a_{1},a_{2},\cdots\right]\right)=\frac{1}{a_{1}+\dfrac{1}{a_{2}+\cdots}}
\]

\end_inset

Note that this mapping misses every rational number, as long as we insist
 that each 
\begin_inset Formula $a_{k}$
\end_inset

 is a natural number, i.e.
 that 
\begin_inset Formula $a_{k}\ne0$
\end_inset

.
 If we instead build the Baire set from the non-negative integers, so as
 to allow 
\begin_inset Formula $a_{k}=0$
\end_inset

, then 
\begin_inset Formula $y$
\end_inset

 will hit the rationals as well.
 The cost here is that each rational has an uncountably infinite representation
 as those strings having arbitrary digits after the first zero.
\end_layout

\begin_layout Standard
Whatever, this is very pointlessly long winded.
 
\end_layout

\begin_layout Subsection*
Borel hierarchy
\end_layout

\begin_layout Standard
Lets now look at the Borel hierarchy.
 For this, we return to familiar ground.
\end_layout

\begin_layout Section*
Bibilography
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "../fractal"
options "tufte"

\end_inset


\end_layout

\end_body
\end_document
