#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{url} 
\usepackage{slashed}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "cmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
World Models
\end_layout

\begin_layout Standard
Hi Greg,
\end_layout

\begin_layout Standard
This PDF picks up where the plain-ascii email leaves off.
\end_layout

\begin_layout Standard
Without further ado: you're interested in formalizing "learning".
 This will require drawing careful distinctions between related concepts.
 So, here we go.
\end_layout

\begin_layout Standard
Starting point is the "good regulator theorem": 
\begin_inset CommandInset href
LatexCommand href
name "https://en.wikipedia.org/wiki/Good_regulator"
target "https://en.wikipedia.org/wiki/Good_regulator"
literal "false"

\end_inset

 Cut-n-paste: "every good regulator must contain a model of the system",
 where by "system" it is meant any one of several things:
\end_layout

\begin_layout Itemize
The "system" is the "external world".
\end_layout

\begin_layout Itemize
The "system" is the "input-agent-output" triple.
\end_layout

\begin_layout Itemize
The "model of the system" is a theory of the "external world" which captures
 "when action X is performed, Y will happen in the external world" (observe
 that I ignore "input" in this third definition: the model only needs to
 capture how the world reacts to actions; a model of the input mechanism
 is not needed, at least, not to first order.)
\end_layout

\begin_layout Standard
There is much to be confused about here.
 So I will attempt to formalize.
\end_layout

\begin_layout Subsubsection*
Definitions
\end_layout

\begin_layout Standard
The following section (and also the following six-seven sections) attempt
 to formalize and provide a notation for conventional concepts in the AI
 and ML world.
 I've attempted to stick to textbook concepts, and to avoid circular defintions,
 but perhaps I've failed.
 This is a sketch.
 Later sections leave the beaten track.
\end_layout

\begin_layout Itemize
\begin_inset Formula $W$
\end_inset

 ::= external world, which is inaccessible except through sensors.
 (Example: a temperature sensor provides temperature data about this world,
 but, like all sensors, the observation can never be omniscient.)
\end_layout

\begin_layout Itemize
\begin_inset Formula $B$
\end_inset

 ::= a database (
\begin_inset Quotes eld
\end_inset

inside
\begin_inset Quotes erd
\end_inset

 the agent) that holds state information about the external world.
 (Example: it is capable of holding a single integer, which will be the
 most recently sensed temperature.
 It could be a time-sequence of temperatures.
 It could be a collection of Bayesian priors about what the external temperature
 might be.) Standard AI texts give this the name of 
\begin_inset Quotes eld
\end_inset

working memory
\begin_inset Quotes erd
\end_inset

.
 It is a scratch-pad, a place where important time-varying results are kept.
 In addition to this, there are other 
\begin_inset Quotes eld
\end_inset

places
\begin_inset Quotes erd
\end_inset

 where 
\begin_inset Quotes eld
\end_inset

knowledge
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

kept
\begin_inset Quotes erd
\end_inset

, to be elucidated later.
\end_layout

\begin_layout Itemize
\begin_inset Formula $H$
\end_inset

 ::= a collection of hypotheses about the external world.
 For example, 
\begin_inset Formula $h_{1}$
\end_inset

 is the hypothesis 
\begin_inset Quotes eld
\end_inset

the temperature is 63 degrees F
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Formula $h_{2}$
\end_inset

 is the hypothesis 
\begin_inset Quotes eld
\end_inset

the temperature is 67 degrees F
\begin_inset Quotes erd
\end_inset

.
 A direct sum symbol 
\begin_inset Formula $\oplus$
\end_inset

 is used to enumerate the elements in the collection, so 
\begin_inset Formula $H=h_{1}\oplus h_{2}\oplus\cdots$
\end_inset

.
 The direct sum symbol is used because the hypotheses are intended to be
 mutually exclusive: it can be 63 degrees or 67 degress but not both.
 It is fun to call 
\begin_inset Formula $H$
\end_inset

 the space of 
\begin_inset Quotes eld
\end_inset

many worlds
\begin_inset Quotes erd
\end_inset

, precisely because these worlds are mutually exclusive.
 It is intellectually risky to call 
\begin_inset Formula $H$
\end_inset

 a 
\begin_inset Quotes eld
\end_inset

set
\begin_inset Quotes erd
\end_inset

, and it is misleading to write 
\begin_inset Formula $H=\left\{ h_{1},h_{2},\cdots\right\} $
\end_inset

.
 Doing so risks miscommunication and confusion.
 However, I will sometimes call 
\begin_inset Formula $H$
\end_inset

 
\begin_inset Quotes eld
\end_inset

a set
\begin_inset Quotes erd
\end_inset

, because I want to use membership: 
\begin_inset Formula $h\in H$
\end_inset

 is a 
\begin_inset Quotes eld
\end_inset

possible world
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes eld
\end_inset

Bayesian prior
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\mu:H\to\mathbb{R}$
\end_inset

 that assigns a real number to each 
\begin_inset Formula $h\in H$
\end_inset

.
 Notation: 
\begin_inset Formula $\mu:h\mapsto x$
\end_inset

 where 
\begin_inset Formula $x=\mu\left(h\right)$
\end_inset

.
 I use the symbol 
\begin_inset Formula $\mu$
\end_inset

 because it is suggestive of 
\begin_inset Quotes eld
\end_inset

measure
\begin_inset Quotes erd
\end_inset

.
 Now, 
\begin_inset Quotes eld
\end_inset

measure
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

the same thing
\begin_inset Quotes erd
\end_inset

 as 
\begin_inset Quotes eld
\end_inset

probability
\begin_inset Quotes erd
\end_inset

, but if one uses the symbol p for every freakin probability that shows
 up, the proliferation of p's is confusing.
 I will reserve p for posteriors or other probabilities, and reserve 
\begin_inset Formula $\mu$
\end_inset

 for priors.
 I strongly wish 
\begin_inset Formula $\mu$
\end_inset

 to be interpreted as a measure upon some sigma algebra.
 So, for example: 
\begin_inset Formula $\mu\left(h_{1}\cup h_{2}\right)=\mu\left(h_{1}\right)+\mu\left(h_{2}\right)$
\end_inset

 and 
\begin_inset Formula $\mu\left(h_{1}\cap h_{2}\right)=0$
\end_inset

 because 
\begin_inset Formula $h_{1}\cap h_{2}=\varnothing$
\end_inset

 because 
\begin_inset Formula $h_{1},h_{2}$
\end_inset

 were defined to be mutually exclusive, above.
 However, there is wiggle room here for more different kinds of games.
\end_layout

\begin_layout Itemize
The notion of Bayesian priors is optional, I think.
 I am defining it because I think I will need this later.
 Other games include 
\begin_inset Formula $\psi:H\to\mathbb{C}$
\end_inset

 and so we call 
\begin_inset Formula $\psi$
\end_inset

 a 
\begin_inset Quotes eld
\end_inset

wave function
\begin_inset Quotes erd
\end_inset

.
 For 
\begin_inset Formula $n$
\end_inset

 qubits, one could have 
\begin_inset Formula $\psi:H\to\mathbb{CP}^{n}$
\end_inset

 where 
\begin_inset Formula $\mathbb{CP}^{n}$
\end_inset

 is complex projective space.
 I beleive this captures the entirety of the so-called 
\begin_inset Quotes eld
\end_inset

quantum computing
\begin_inset Quotes erd
\end_inset

 game (if I'm wrong, tell me how.).
 The geometric computing guys write 
\begin_inset Formula $\psi:H\to X$
\end_inset

 where 
\begin_inset Formula $X$
\end_inset

 is a homogeneous space (a topological space that is a quotient of Lie groups)
 and state transitions are given by the transitive actions of some (Lie)
 group 
\begin_inset Formula $G$
\end_inset

.
 As far as I can tell, 
\begin_inset Quotes eld
\end_inset

quantum computing
\begin_inset Quotes erd
\end_inset

 is a special case where 
\begin_inset Formula $X=\mathbb{CP}^{n}$
\end_inset

 (and the halting states are 
\begin_inset Quotes eld
\end_inset

measurements
\begin_inset Quotes erd
\end_inset

 i.e.
 projections to the orthogonal basis.) As far as I can tell, a 
\begin_inset Quotes eld
\end_inset

probabilistic state machine
\begin_inset Quotes erd
\end_inset

 is the special case where 
\begin_inset Formula $X=\mathbb{P}\left(n\right)=\mathbf{2}^{n}$
\end_inset

 the power set of 
\begin_inset Formula $n$
\end_inset

 states (states of a finite machine).
 Likewise, a 
\begin_inset Quotes eld
\end_inset

deterministic finite automaton
\begin_inset Quotes erd
\end_inset

 has 
\begin_inset Formula $X=\mathbf{n}$
\end_inset

 (the set of 
\begin_inset Formula $n$
\end_inset

 states).
 I have read texts which stated my last four sentences explicitly.
 I have not read texts which explictly formulated 
\begin_inset Quotes eld
\end_inset

state transition systems
\begin_inset Quotes erd
\end_inset

 in terms of such actions of groups on homogenous spaces, although this
 is implicit when one speaks of 
\begin_inset Quotes eld
\end_inset

categories of Acts
\begin_inset Quotes erd
\end_inset

, etc.
 I have not read about pi calculus, but I assume that these notions are
 implicit if not explicit.
 But all this is just a digression, and it might not be a useful digression.
 Lets continue on ...
\end_layout

\begin_layout Subsubsection*
Pause: An example
\end_layout

\begin_layout Standard
Lets pause and look at a few examples, before continuing.
 An olde-fashioned, 1950's thermostat consisted of a temperature sensor
 
\begin_inset Formula $S$
\end_inset

 generating temperature readings 
\begin_inset Formula $i\in I$
\end_inset

 from a set 
\begin_inset Formula $I$
\end_inset

 of all possible temperature readings.
 (Perhaps 
\begin_inset Formula $I$
\end_inset

 is the same as 
\begin_inset Formula $H$
\end_inset

 above? I don't know, I am confused.) Perhaps I should use a time-label subscript
 
\begin_inset Formula $i_{t}$
\end_inset

 to denote the temperature reading at time 
\begin_inset Formula $t$
\end_inset

.
 However, 1950's thermostats do not include time as a part of their world-model.
 The progression of time is an idea in the mind of the engineer creating
 this particular type of thermostat.
 Modern thermostats do include a notion of time.
 
\end_layout

\begin_layout Standard
I will (provisionally?) write 
\begin_inset Formula $S:W\to I$
\end_inset

 so that the sensor 
\begin_inset Formula $S$
\end_inset

 observes the external world 
\begin_inset Formula $W$
\end_inset

 and generates a reading 
\begin_inset Formula $i\in I$
\end_inset

.
\end_layout

\begin_layout Standard
The reading 
\begin_inset Formula $i\in I$
\end_inset

 is placed in to the database 
\begin_inset Formula $B$
\end_inset

.
 I cannot think of any good notation for 
\begin_inset Quotes eld
\end_inset

place value into database
\begin_inset Quotes erd
\end_inset

.
 (Any suggestions?) There might be computation involved here, so there is
 some function 
\begin_inset Formula $f:I\times B\to B$
\end_inset

 with 
\begin_inset Formula $f:\left(i,b\right)\mapsto b^{\prime}$
\end_inset

 that takes the pair 
\begin_inset Formula $\left(i,b\right)$
\end_inset

 and performs a computation 
\begin_inset Formula $f$
\end_inset

 to obtain 
\begin_inset Formula $b^{\prime}$
\end_inset

.
 So I guess perhaps 
\begin_inset Formula $f$
\end_inset

 is a state transition function? I don't yet know if this is a good way
 of thinking/talking about it.
 This is all provisional.
 At any rate, the idea here is that new sensory input causes the working
 memory 
\begin_inset Formula $B$
\end_inset

 to be updated.
\end_layout

\begin_layout Standard
For the 1950's thermstat, the database 
\begin_inset Formula $B$
\end_inset

 can hold only two values: 
\begin_inset Quotes eld
\end_inset

too hot
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

too cold
\begin_inset Quotes erd
\end_inset

.
 It is a single bit.
\end_layout

\begin_layout Standard
Next, there is an actuator 
\begin_inset Formula $A:B\to D$
\end_inset

 where 
\begin_inset Formula $D$
\end_inset

 is a device that acts upon the world.
 For example, 
\begin_inset Formula $D$
\end_inset

 is a heater; it is the thing that the thermostat is controlling.
 Here, 
\begin_inset Formula $D=\left\{ \mbox{on},\mbox{off}\right\} =\left\{ d_{s}|s=\mbox{device state}\right\} =\left\{ d_{\mbox{on}},d_{\mbox{off}}\right\} $
\end_inset

.
 For each device state 
\begin_inset Formula $s$
\end_inset

, we have that 
\begin_inset Formula $d_{s}:W\to W$
\end_inset

 with 
\begin_inset Formula $d_{s}:w\mapsto w^{\prime}$
\end_inset

 and this is what we mean by 
\begin_inset Quotes eld
\end_inset

the device acts upon the (external) world.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsubsection*
Philosophical digression
\end_layout

\begin_layout Standard
Here, we bump heads with philosophy.
 From the point of view of 
\begin_inset Quotes eld
\end_inset

the good regulator
\begin_inset Quotes erd
\end_inset

, the external world 
\begin_inset Formula $W$
\end_inset

 is unknown, unknowable, ineffable, except by means of the temerpature sensor
 
\begin_inset Formula $S$
\end_inset

.
 The 
\begin_inset Quotes eld
\end_inset

external world
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $W$
\end_inset

 
\begin_inset Quotes eld
\end_inset

exists
\begin_inset Quotes erd
\end_inset

 only in the mind of the engineer (you and I), who imagine (hallucinate)
 that there is such a place.
 The reality is that we sit behind eyeballs and ears, and have no direct
 access to 
\begin_inset Formula $W$
\end_inset

.
 We cannot 
\begin_inset Quotes eld
\end_inset

prove
\begin_inset Quotes erd
\end_inset

 it exists, which is why solipsism is an admissible philosophical position.
 It is also acceptable to 
\begin_inset Quotes eld
\end_inset

beleive
\begin_inset Quotes erd
\end_inset

 that the 
\begin_inset Quotes eld
\end_inset

external world
\begin_inset Quotes erd
\end_inset

 exists.
 
\end_layout

\begin_layout Standard
I raised this philosphical issue for a reason: We do not know, we cannot
 know, whether our heater is actually making an impact upon the external
 world.
 For starters, the heater might be broken: we turn it on and off (we beleive
 it to be on and off), but nothing happens.
 How do we know nothing happens? Well, the temperature sensor is always
 giving us a temperature reading.
 This reading has both a random and a diurnal (24-hour) variation.
 Perhaps my heater is weak and slow.
 Perhaps someone opened a window.
 Perhaps I know the heater is broken, because the temperature no long changes
 the way it used to change, last week.
 However, a 1950's thermostat does not know how the temperature changed
 last week.
 It's working memory 
\begin_inset Formula $B$
\end_inset

 holds only a single bit of information.
\end_layout

\begin_layout Standard
The sensory device may also be broken: it may be 
\begin_inset Quotes eld
\end_inset

hallucinating
\begin_inset Quotes erd
\end_inset

 the temperature.
 A time-series of temperature measurements might be generated, but these
 might be independent of the 
\begin_inset Quotes eld
\end_inset

actual
\begin_inset Quotes erd
\end_inset

 temperature of 
\begin_inset Formula $W$
\end_inset

 (whatever the heck that is?) The sensor 
\begin_inset Formula $S$
\end_inset

 is taking 
\begin_inset Quotes eld
\end_inset

some reading
\begin_inset Quotes erd
\end_inset

 of 
\begin_inset Formula $W$
\end_inset

, but what that might be is only known to the engineer who designed the
 thermostat.
 It is fundamentally unknowable to the thermostat itself.
\end_layout

\begin_layout Standard
All of this whinging is to say that we don't really know what 
\begin_inset Formula $W$
\end_inset

 is, we don't really know quite what it is we are perceiving, if it matches
 
\begin_inset Quotes eld
\end_inset

reality
\begin_inset Quotes erd
\end_inset

, or if the sensors are 
\begin_inset Quotes eld
\end_inset

hallucinating
\begin_inset Quotes erd
\end_inset

.
 Our actuator might be broken, and might not be having any 
\begin_inset Quotes eld
\end_inset

actual
\begin_inset Quotes erd
\end_inset

 effect upon the external universe.
 And we might be 
\begin_inset Quotes eld
\end_inset

crazy
\begin_inset Quotes erd
\end_inset

, in that we beleive that our actions are having an effect that they do
 not actually have.
 That is, our 
\begin_inset Quotes eld
\end_inset

world model
\begin_inset Quotes erd
\end_inset

 is incorrect, incoherent, insane, inconsistent, in addition to merely being
 incomplete.
\end_layout

\begin_layout Standard
The philosophical problem here is that the external world 
\begin_inset Formula $W$
\end_inset

 is, in a certain way 
\begin_inset Quotes eld
\end_inset

ineffable
\begin_inset Quotes erd
\end_inset

.
 I am rasing this as an issue, because, mathematically, symbolically, I
 am using a symbol 
\begin_inset Formula $W$
\end_inset

 and I am using other symbols 
\begin_inset Formula $S$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 that are functions involving 
\begin_inset Formula $W$
\end_inset

.
 Such symbols allow me to state an algebra, and perform logical reasoning
 about this symbolic system.
 However, the foundations are shaky, because it is unclear to what extent
 
\begin_inset Formula $W$
\end_inset

 
\begin_inset Quotes eld
\end_inset

actually exists
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Perhaps we can settle on a operational defintion.
 In the mind of the engineer who is designing the thermostat, there does
 exist a room having a temperature, and there does exist a sensor and a
 heater, and these range over a set of possible values, and we can use mathemati
cal notation to denote (
\begin_inset Quotes eld
\end_inset

denotational semantics
\begin_inset Quotes erd
\end_inset

) these sets and functions.
 Insofar as all engineers are humans, there is no particular problem with
 partitioning 
\begin_inset Formula $W$
\end_inset

 in this way, as 
\begin_inset Quotes eld
\end_inset

that thing which exists inside the engineer's head
\begin_inset Quotes erd
\end_inset

.
 However, there is a philosophical problem, because this 
\begin_inset Formula $W$
\end_inset

 is that which only exists inside of my head (and also yours, since I beleive
 that you exist, and I hope you read this, and I hope you understand what
 I meant to say.) However, I might be crazy: you might not actually exist.
 My output device might be broken: the stuff I write might fail to have
 the desired effect upon the universe.
 My input device might be broken, and I am dreaming.
 
\end_layout

\begin_layout Standard
Perhaps these last six paragraphs were silly, since obviously, every sane
 mathematician and engineer knows these things and take them for granted.
 However, in my experience of the world, I witness varying degrees of sanity,
 and so I felt compelled to state the obvious.
 I should also ahnd-wave 
\begin_inset Quotes eld
\end_inset

blah blah blah AGI
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

blah blah blah, Bostrom's simulation argument
\begin_inset Quotes erd
\end_inset

 just to drive the point home.
 Anyway ...
\end_layout

\begin_layout Subsubsection*
Recap of example
\end_layout

\begin_layout Standard
The 1950's single-bit thermostat 
\begin_inset Formula $R$
\end_inset

 consists of:
\end_layout

\begin_layout Itemize
A temperature sensor 
\begin_inset Formula $S:W\to I$
\end_inset

 (giving a numeric temperature.)
\end_layout

\begin_layout Itemize
A working-memory update function 
\begin_inset Formula $f:I\times B\to B$
\end_inset

 (updating working memory to be either 
\begin_inset Quotes eld
\end_inset

too hot
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

too cold
\begin_inset Quotes erd
\end_inset

.)
\end_layout

\begin_layout Itemize
An actuator device 
\begin_inset Formula $A:B\to D$
\end_inset

 which selects states 
\begin_inset Formula $d_{s}\in D$
\end_inset

 which all have the form 
\begin_inset Formula $d_{s}:W\to W$
\end_inset

.
 Here, 
\begin_inset Formula $s$
\end_inset

 is on or off, and 
\begin_inset Formula $d_{s}$
\end_inset

 is the heater that is on or off.
\end_layout

\begin_layout Standard
That is, the regulator 
\begin_inset Formula $R$
\end_inset

 is the tuple 
\begin_inset Formula $R=\left(I,B,D;S,f,A\right)$
\end_inset

 and for better or for worse, I left out 
\begin_inset Formula $W$
\end_inset

 from this tuple, because of the philosophical observations above.
 Perhaps this is a mistake, and 
\begin_inset Formula $W$
\end_inset

 should be a part of this tuple.
 Onwards through the fog.
\end_layout

\begin_layout Standard
I claim that the regulator 
\begin_inset Formula $R$
\end_inset

 satisfies the 
\begin_inset Quotes eld
\end_inset

good regulator theorem
\begin_inset Quotes erd
\end_inset

.
 From what I can tell, this theorem is not an actual mathematical theorem.
 But perhaps I am mistaken.
 Let me continue less rigorously: 
\begin_inset Formula $R$
\end_inset

 satisfies the 
\begin_inset Quotes eld
\end_inset

good regulator theorem
\begin_inset Quotes erd
\end_inset

 because it contains a single-bit model of the universe: 
\begin_inset Quotes eld
\end_inset

too hot
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

too cold
\begin_inset Quotes erd
\end_inset

.
 But also 
\begin_inset Formula $R$
\end_inset

 has an implicit meta-theory: the universe has a temperature that can be
 sensed, and this temp can be altered with heaters.
 This meta-theory exists in the engineer's head, and is used to drive engineerin
g decisions.
 The meta-theory is used by the engineer to design thermostats.
\end_layout

\begin_layout Subsubsection*
Models of the World
\end_layout

\begin_layout Standard
Finally, I am able to arrive at an informal but important concept:
\end_layout

\begin_layout Itemize
\begin_inset Formula $T$
\end_inset

 ::= a theory of the external world.
 This is a meta-theory, in the above sense.
\end_layout

\begin_layout Standard
I wish to be able to say that 
\begin_inset Formula $R\in T$
\end_inset

 or something similar.
 But I am confused.
 Is 
\begin_inset Formula $T$
\end_inset

 the space of all possible thermostats? Because modern engineers can build
 thermostats with day/night/weekend settings.
 Thermostats that can record time-series of temperatures into databases
 
\begin_inset Formula $B$
\end_inset

 having sizes of kilobytes or megabytes.
 They might contain algorithms to perform diurnal analysis so that the heater
 comes on, on cold days, half an hour before you wake up.
 Some thermostats disable air-conditioning for the entire heating season
 of many months.
 A genius thermostat might attempt to predict temperatures for the next
 one-hundred years, although most human engineers would call such a home
 thermostat 
\begin_inset Quotes eld
\end_inset

insane
\begin_inset Quotes erd
\end_inset

.
 It is not 
\begin_inset Quotes eld
\end_inset

insane
\begin_inset Quotes erd
\end_inset

 per the earlier definitions of sanity, but because the living room that
 the thermostat is controlling might not exist in 100 years, and so contemplatin
g temperatures that far in the future seems pointless and futile to mid-wit
 intelligences.
 A normie engineer will not build a consumer-grade home thermostat that
 remembers and ponders temperature unto eternity.
\end_layout

\begin_layout Standard
All of this verbal spillage is to drive home the idea that 
\begin_inset Formula $B$
\end_inset

 alone is not the model of the world.
 
\begin_inset Formula $B$
\end_inset

 was working memory, a scratch pad.
 The database 
\begin_inset Formula $B$
\end_inset

 might be organized to contain Bayesian priors, and it might be organized
 to perform Bayesian updates.
 That is, the update function 
\begin_inset Formula $f:I\times B\to B$
\end_inset

 might involve a Bayesian update.
 The update function might involve a quantum computer.
 The database 
\begin_inset Formula $B$
\end_inset

 might be digital, storing bits, or it might store qubits.
 The database 
\begin_inset Formula $B$
\end_inset

 may be 
\begin_inset Quotes eld
\end_inset

uncountably large
\begin_inset Quotes erd
\end_inset

, in that it might be some distribution on a homogenous space; it might
 be some Hilbert space of functions on top of a homogenous space.
 The objects of 
\begin_inset Formula $B$
\end_inset

 might be loops and suspensions or Leray spectral sequences or other concepts
 from algebraic topology.
 The point here is that these, umm, things, umm, objects are only 
\begin_inset Quotes eld
\end_inset

models of the world
\begin_inset Quotes erd
\end_inset

 in the small sense (of being like a stored temperature) but not in the
 big sense (of being like a thermostat/heater).
\end_layout

\begin_layout Standard
Some people call 
\begin_inset Formula $B$
\end_inset

 the 
\begin_inset Quotes eld
\end_inset

model of the world
\begin_inset Quotes erd
\end_inset

 and some people call 
\begin_inset Formula $T$
\end_inset

 the 
\begin_inset Quotes eld
\end_inset

model of the world
\begin_inset Quotes erd
\end_inset

, and the failure to clearly distinguish these two is a failure mode for
 professional communications.
\end_layout

\begin_layout Standard
The distinction between 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $T$
\end_inset

 seems to be important for defining what 
\begin_inset Quotes eld
\end_inset

learning
\begin_inset Quotes erd
\end_inset

 is.
\end_layout

\begin_layout Standard
More or less everything I have written above is conventional knowledge or
 standard knowledge that is well-known to practitioners versed in the state
 of the art.
 The design and analysis of regulators 
\begin_inset Formula $R$
\end_inset

 is called 
\begin_inset Quotes eld
\end_inset

control theory
\begin_inset Quotes erd
\end_inset

 and there are hundreds of texbooks written about control theory.
 Nothing of what I've written so far should be controversial, and all of
 it should be findable in some text or another.
 I now leave this realm, and will start to 
\begin_inset Quotes eld
\end_inset

make shit up
\begin_inset Quotes erd
\end_inset

, and the result might be 
\begin_inset Quotes eld
\end_inset

shit
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Subsubsection*
Agents
\end_layout

\begin_layout Standard
In the above, I developed a notion of a regulator 
\begin_inset Formula $R$
\end_inset

 being the tuple 
\begin_inset Formula $R=\left(I,B,D;S,f,A\right)$
\end_inset

.
 As I have not yet read or pondered the rho-calculus papers, I do not know
 how to convert this into rho language.
 I don't think it should be hard, and that exercise should reveal how to
 generalize my definitions.
\end_layout

\begin_layout Standard
And yet, I'm already confused.
 Take, for example, the sensor function 
\begin_inset Formula $S:W\to I$
\end_inset

.
 In the rho calculus, the elements of 
\begin_inset Formula $I$
\end_inset

 are agents (since the rho calculus is recursive in this way) and 
\begin_inset Formula $S$
\end_inset

 seems to be a message passing of sorts.
 I wrote 
\begin_inset Quotes eld
\end_inset

of sorts
\begin_inset Quotes erd
\end_inset

 because it is not obvious to me that one can treat 
\begin_inset Formula $W$
\end_inset

 as a collection of 
\begin_inset Quotes eld
\end_inset

external agents
\begin_inset Quotes erd
\end_inset

, which can be selected from and passed to the 
\begin_inset Quotes eld
\end_inset

primary agent
\begin_inset Quotes erd
\end_inset

 of which we talk about.
 As discussed before, the 
\begin_inset Quotes eld
\end_inset

external world
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $W$
\end_inset

 is in some sense unknowable, ineffable and inalterable except through the
 sensor 
\begin_inset Formula $S$
\end_inset

 and the motor 
\begin_inset Formula $A$
\end_inset

, and these may be hallucinating or broken.
\end_layout

\begin_layout Standard
I don't know how the rho calculus deals with this.
 Perhaps it doesn't.
 This is OK if you are an engineer, and it is indeed very useful to pretend
 that there is a 
\begin_inset Quotes eld
\end_inset

real
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $W$
\end_inset

 out there that can be measured and acted upon.
 Perhaps we are even forced to be engineers, and, in the short term, can
 only build AGI according to the assumption that 
\begin_inset Formula $W$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

real
\begin_inset Quotes erd
\end_inset

.
 But one can get 
\begin_inset Quotes eld
\end_inset

really out there
\begin_inset Quotes erd
\end_inset

 in physics, by hand-waving mumbo-jumbo about QM, planck length, ER=EPR
 and whatnot.
 Assuming a Cartesian existance for 
\begin_inset Formula $W$
\end_inset

 is perhaps unavoidable at this stage of the game, but I think it would
 be better to avoid a dependence on such an assumption.
\end_layout

\begin_layout Subsubsection*
Learning
\end_layout

\begin_layout Standard
I will now attempt to define what learning is.
 I may fail.
 The following might contain errors, infelicities, and misleading remarks.
\end_layout

\begin_layout Standard
A 
\begin_inset Quotes eld
\end_inset

learning system
\begin_inset Quotes erd
\end_inset

 is a system that creates a sequence of update functions 
\begin_inset Formula $f_{k}:I\times B\to B$
\end_inset

 with 
\begin_inset Formula $k\in\mathbb{Z}$
\end_inset

 and also actuators 
\begin_inset Formula $A_{k}:B\to D$
\end_inset

 such that each of these is somehow 
\begin_inset Quotes eld
\end_inset

better
\begin_inset Quotes erd
\end_inset

 than the one before.
 This might reuire a sequence of 
\begin_inset Formula $B_{k}$
\end_inset

 to be generated.
 It will often be the case that 
\begin_inset Formula $B_{k}\subseteq B_{k+1}$
\end_inset

 but not always: learning might involve the discovery of a shorter 
\begin_inset Quotes eld
\end_inset

description length
\begin_inset Quotes erd
\end_inset

, which is often taken to be a 
\begin_inset Quotes eld
\end_inset

better model of the world
\begin_inset Quotes erd
\end_inset

.
 The words 
\begin_inset Quotes eld
\end_inset

description length
\begin_inset Quotes erd
\end_inset

 usually mean 
\begin_inset Quotes eld
\end_inset

the size of 
\begin_inset Formula $B$
\end_inset


\begin_inset Quotes erd
\end_inset

 or perhaps 
\begin_inset Quotes eld
\end_inset

the size of 
\begin_inset Formula $b\in B$
\end_inset


\begin_inset Quotes erd
\end_inset

 and so the 
\begin_inset Quotes eld
\end_inset

minimum description length
\begin_inset Quotes erd
\end_inset

 is commonly understood to be 
\begin_inset Quotes eld
\end_inset

the smallest possible size for 
\begin_inset Formula $b\in B$
\end_inset

 that still accurately represents the external phenomenon in 
\begin_inset Formula $W$
\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
For example, a temporal sequence of temperature readings might be that 
\begin_inset Quotes eld
\end_inset

external phenomenon in 
\begin_inset Formula $W$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 The flaw is now obvious: the temperture readings are from the sensor 
\begin_inset Formula $S$
\end_inset

 and we make a category error in assuming they 
\begin_inset Quotes eld
\end_inset

exist
\begin_inset Quotes erd
\end_inset

 in 
\begin_inset Formula $W$
\end_inset

.
 Some philosophers of AI fail to make this distinction during drunken conversati
ons.
\end_layout

\begin_layout Standard
I am going to point out, and then ignore the possibility that there might
 be a sequence of 
\begin_inset Formula $I_{k}$
\end_inset

 and of 
\begin_inset Formula $D_{k}$
\end_inset

.
 A learner might be able to build a better sensor (e.g.
 a human might build a microscope or telescope, to make observations the
 naked eye cannot make, by itself.) A learner might build a better control
 device (
\emph on
e.g.

\emph default
 a human might build a motor, a steam engine, that far exceeds the strength
 and power of human muscles.) Talking about the learning of improved sensors
 and motors would seem to complicate the discussion, so I set it aside.
\end_layout

\begin_layout Subsubsection*
Utility functions
\end_layout

\begin_layout Standard
What do we mean by 
\begin_inset Quotes eld
\end_inset

better
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

improved
\begin_inset Quotes erd
\end_inset

? Conventional machine-learning texts offer two distinctions: 
\begin_inset Quotes eld
\end_inset

supervised learning
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

unsupervised learning
\begin_inset Quotes erd
\end_inset

.
 In supervised learning, there is an explicit 
\begin_inset Quotes eld
\end_inset

scoring function
\begin_inset Quotes erd
\end_inset

 aka 
\begin_inset Quotes eld
\end_inset

utility function
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $U$
\end_inset

 that tells you how well you are doing.
 The higher the score, the better.
 Learning algos can then do 
\begin_inset Quotes eld
\end_inset

hill climbing
\begin_inset Quotes erd
\end_inset

 to improve the score.
 For differentiable utility functions, one can take the gradient and do
 
\begin_inset Quotes eld
\end_inset

gradient descent
\begin_inset Quotes erd
\end_inset

 (after a minus sign).
 There's an immense zoo of algos that can be applied to any given, fixed
 domain.
\end_layout

\begin_layout Standard
A 
\begin_inset Quotes eld
\end_inset

fixed domain
\begin_inset Quotes erd
\end_inset

 fixes the utility function 
\begin_inset Formula $U$
\end_inset

 and also fixes the input alphabet 
\begin_inset Formula $I$
\end_inset

.
 It is often (usually) the case that learning is restricted to 
\begin_inset Formula $D=\varnothing$
\end_inset

 the empty set.
 That is, the learning system is NOT an agent, and has no effect upon the
 
\begin_inset Quotes eld
\end_inset

external world
\begin_inset Quotes erd
\end_inset

.
 Things like GPT fall into this class, insofar as the training of GPT is
 done on some fixed texts.
 The external world 
\begin_inset Formula $W$
\end_inset

 on which GPT trains is the collection of training texts.
 These are static, unalterable.
 They are held on a disk drive, they are not dynamic.
 Training is not interactive, and the part where humans 
\begin_inset Quotes eld
\end_inset

talk to
\begin_inset Quotes erd
\end_inset

 GPT is outside of the learning iterator.
\end_layout

\begin_layout Subsubsection*
Supervised learning
\end_layout

\begin_layout Standard
Lets try to formalize supervised learning.
 It requires (
\emph on
ad hoc
\emph default
) a utility function 
\begin_inset Formula $U:I\times B\to\mathbb{R}$
\end_inset

 which is able to directly access the entire 
\begin_inset Quotes eld
\end_inset

training corpus
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $I$
\end_inset

 as well as access the entire 
\begin_inset Quotes eld
\end_inset

database of knowledge
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $B$
\end_inset

 and assign a numeric score 
\begin_inset Formula $u\in\mathbb{R}$
\end_inset

.
 Here, we talk about 
\begin_inset Formula $I$
\end_inset

 instead of the sensor 
\begin_inset Formula $S:W\to I$
\end_inset

 so that we can avoid talking about sensors.
 This is convenient and makes sense when 
\begin_inset Formula $D=\varnothing$
\end_inset

.
\end_layout

\begin_layout Standard
An example.
 For GPT, someone digitized telephone conversations and printed books and
 created a text file of UTF-8 text that consists of words and sentences.
 Perhaps they've segmented into blank-delimited words and punctuation-delimited
 sentences.
 This is all 
\begin_inset Formula $I$
\end_inset

 because it is post-sensory for audio and video.
 Here, 
\begin_inset Formula $I$
\end_inset

 is called the 
\begin_inset Quotes eld
\end_inset

text corpus
\begin_inset Quotes erd
\end_inset

 because that is what linguists call it.
 Its non-dynamic, non-interactive, fixed.
 
\end_layout

\begin_layout Standard
One can also do supervised learning with agents.
 Best explained by example.
 One has a grid, 2D or 3D, say, in Minecraft.
 This provides the 
\begin_inset Formula $W$
\end_inset

.
 One has a robot agent that can perform position measurements: thus, 
\begin_inset Formula $S:W\to I$
\end_inset

.
 The agent has a motor selector 
\begin_inset Formula $A:B\to D$
\end_inset

 with each motor setting 
\begin_inset Formula $d_{s}\in D$
\end_inset

 giving a 
\begin_inset Formula $d_{s}:W\to W$
\end_inset

 that alters the position of the robot in 
\begin_inset Quotes eld
\end_inset

the real worled
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $W$
\end_inset

 (ooof.) The update function 
\begin_inset Formula $f:I\times B\to B$
\end_inset

 will typically record numbers representing it's position in the real world.
 More accurately, it records 
\begin_inset Quotes eld
\end_inset

where it thinks it might be in 
\begin_inset Formula $W$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 Update algos include 
\begin_inset Quotes eld
\end_inset

dead reckoning
\begin_inset Quotes erd
\end_inset

, which is the integration of the differential equations of motion, using
 e.g.
 alpha-beta filters, or Kalman filters.
 Update of location might also use GPS radios to obtain position info from
 
\begin_inset Formula $W$
\end_inset

 (which is then merged into the dead-reckoning integral.) The motor function
 is obvious: say it is a quad-copter.
 It flies, according to 
\begin_inset Formula $d_{s}:W\to W$
\end_inset

.
 The reward function is then 
\begin_inset Formula $U:B\times D\to\mathbb{R}$
\end_inset

 although it might not be all of 
\begin_inset Formula $\mathbb{R}$
\end_inset

 but just a single bit of success/fail.
 Learning of single-bit reward functions is, of course, difficult.
\end_layout

\begin_layout Standard
To make this less abstract, consider the case of a quadcopter carrying a
 grenade in Ukraine.
 It's task is to kill russians, and so the reward function is 
\begin_inset Quotes eld
\end_inset

dead russian is better than live russian
\begin_inset Quotes erd
\end_inset

.
 (One can add 
\begin_inset Quotes eld
\end_inset

surrendered russian
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

fleeing russian
\begin_inset Quotes erd
\end_inset

, but now we quibble.) The evaluation of dead vs.
 alive is performed via 
\begin_inset Formula $S:W\to I$
\end_inset

 where 
\begin_inset Formula $S$
\end_inset

 is some camera spewing pixels, perhaps a radar, perhaps a temerature sensor.
 Of course, 
\begin_inset Formula $S:W\to I$
\end_inset

 must also include sensors needed for normal operation, such as air-speed
 and weather and ground proximity.
 It also includes sensors for 
\begin_inset Quotes eld
\end_inset

internal robot state
\begin_inset Quotes erd
\end_inset

 such as battery charge or rotor RPM.
 The contents of 
\begin_inset Formula $B$
\end_inset

 includes a terrain map, a weather forecast, a collection of Bayesian priors
 for the current position of the quadcopter, a record of flight data.
 So far, I've described only what's needeed for normaly flying & bombing
 operation.
 It becomes a learning problem only when one has the opportunity to repeatedly
 kill russians.
 Only then can one try to find optimal flight-path and bomb-launch solutions.
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

learning
\begin_inset Quotes erd
\end_inset

 I am trying to describe here is meant to be 
\begin_inset Quotes eld
\end_inset

autonomous learning
\begin_inset Quotes erd
\end_inset

.
 The optimal solutions for control problems has a huge literature, dating
 back almost 100 years, published under the title of 
\begin_inset Quotes eld
\end_inset

operations research
\begin_inset Quotes erd
\end_inset

.
 However, when an engineer looks up some optimal algorithm in a book and
 codes this up in software, this is NOT a part of learning.
 Thus, we conclude that there is a factorization of 
\begin_inset Formula $f_{k}:I\times B\to B$
\end_inset

 such that 
\begin_inset Formula $f_{k}=f^{\left(e\right)}\otimes f_{k}^{\left(l\right)}$
\end_inset

 where 
\begin_inset Formula $f^{\left(e\right)}$
\end_inset

 is some optimal control algorithm provided by the engineer (and is, by
 definition, immutable over time), and 
\begin_inset Formula $f_{k}^{\left(l\right)}$
\end_inset

 is the sequence of update functions that are being learned by the (supervised)
 learning system.
\end_layout

\begin_layout Standard
In case you (or any other reader of this text) think that a one-bit utility
 function is too difficult to learn, let me remind that DeepMind (and other
 systems) are able to learn how to play video games with one-bit reward
 functions (you won/lost the game).
 State-of-the-art research includes how to learn, minimizing the number
 of times that you loose.
 That is, risk-averse algorithms: one does not wish to train self-driving
 autonomous car systems with algorithms that frequently kill humans.
\end_layout

\begin_layout Standard
Since I have not yet read or pondered the rho calculus papers, I am now
 at an impass of what to write down next.
 Recall we started with a regulator 
\begin_inset Formula $R$
\end_inset

 being the tuple 
\begin_inset Formula $R=\left(I,B,D;S,f,A\right)$
\end_inset

 and we replace this with a sequence of regulators 
\begin_inset Formula $R_{k}=\left(I,B_{k},D;S,f_{k},A\right)$
\end_inset

.
 A 
\begin_inset Quotes eld
\end_inset

learning algorithm
\begin_inset Quotes erd
\end_inset

 is a function 
\begin_inset Formula $L:R_{k}\mapsto R_{k+1}$
\end_inset

 such that 
\begin_inset Formula $U\left(R_{k+1}\right)>U\left(R_{k}\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection*
Battlefield State of the Art
\end_layout

\begin_layout Standard

\emph on
A propos
\emph default
 to nothing at all.
 Battlefield learning: I was once hired to create a learning system that
 could figure out coordinated platoon movements from radar data.
 The radar data included moving animals (coyotes, cows), vehicles (tractors,
 cars, on and off the road), brightness (an ambulating farmer has less of
 a radar reflection than a combatant carrying a metal gun or other radar-reflect
ing metal items.) The goal of learning was to determine if the movements
 were coordinated (e.g.
 by radio-telephone) and what the movement was (are they gathering together,
 spreading apart, reconoitering, retreating in dissarry, running for the
 hail-mary 80 yard pass five seconds before the end of the fourth quarter.)
 Observe that this system can be used to analyze football games and ballet
 dances, and not just food-soldier tactics.
 So in principle, it is data-agnostic.
 But it does give a flavor for the state of the art.
 Why am I mentioning this? I dunno.
 It popped into my mind.
\end_layout

\begin_layout Subsubsection*
Unsupervised learning
\end_layout

\begin_layout Standard
Standard machine learning texts also describe 
\begin_inset Quotes eld
\end_inset

unsupervised learning
\begin_inset Quotes erd
\end_inset

.
 However, the distinction between 
\begin_inset Quotes eld
\end_inset

supervised
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

unsupervised
\begin_inset Quotes erd
\end_inset

 is a bit 
\emph on
ad hoc
\emph default
, and is more of a conventional usage, rather than a precise definition.
 Let me present the conventional distinction.
\end_layout

\begin_layout Standard
Older, conventional learning was posed as a task applied to a table of rows
 and columns, of which one column was labelled as 
\begin_inset Quotes eld
\end_inset

output
\begin_inset Quotes erd
\end_inset

 and the remaining columns labelled as 
\begin_inset Quotes eld
\end_inset

input
\begin_inset Quotes erd
\end_inset

.
 Each row was a 
\begin_inset Quotes eld
\end_inset

datapoint
\begin_inset Quotes erd
\end_inset

 and the learning task is to find a compact but accurate function that predicts
 output based on the input.
 The utility function is one that maximizes correctness, and usually includes
 a term for complexity penalty.
 That is, given two predictors of the output, the one with the smaller complexit
y is more highly valued.
 Some notion of Kolmogorov complexity is usually used.
 It's not hard to write it down.
 The final accuracy or 
\begin_inset Quotes eld
\end_inset

fitness
\begin_inset Quotes erd
\end_inset

 of the learned function can be evaluated on a subset of rows that were
 held out during training.
 The word 
\begin_inset Quotes eld
\end_inset

accuracy
\begin_inset Quotes erd
\end_inset

 can refer to a minimization of false-positives, or false-negatives, or
 a maximization of the F1-score, or a maximal area under the ROC curve,
 whatever.
 In this context, 
\begin_inset Quotes eld
\end_inset

unsupervised training
\begin_inset Quotes erd
\end_inset

 is what you did when you did not have such a tabular form.
\end_layout

\begin_layout Standard
However, for most of these non-tabular 
\begin_inset Quotes eld
\end_inset

unsupervised
\begin_inset Quotes erd
\end_inset

 cases, there is still some sort of utility score.
 So, for the automated learning of video-game playing, in the end, one has
 a feedback signal that 
\begin_inset Quotes eld
\end_inset

you won/lost the game
\begin_inset Quotes erd
\end_inset

 that can be used during training.
 For LLM's, such as GPT, these are generally accepted to belong to the 
\begin_inset Quotes eld
\end_inset

unsupervised
\begin_inset Quotes erd
\end_inset

 class, and the scoring function is given by how well you predicted word
 
\begin_inset Formula $w_{n}$
\end_inset

 given the prior sequence of 
\begin_inset Formula $\left(w_{1},w_{2},\cdots,w_{n-1}\right)$
\end_inset

.
 A different variant requies the prediction of 
\begin_inset Formula $w_{n}$
\end_inset

 given 
\begin_inset Formula $\left(\cdots,w_{n-1},w_{n+1},\cdots\right)$
\end_inset

.
 One can always evaluate the final accuracy by holding out some subset of
 the training corpus, and evaluating your model on this hold-out set.
 The main point here is that, even in the conventionally 
\begin_inset Quotes eld
\end_inset

unsupervised
\begin_inset Quotes erd
\end_inset

 situation, one still has some global 
\begin_inset Quotes eld
\end_inset

utility function
\begin_inset Quotes erd
\end_inset

 that one wishes to maximize.
 
\end_layout

\begin_layout Subsubsection*
Utility functions redux
\end_layout

\begin_layout Standard
This is one reason why the folks at MIRI seem to be so obsessed with utility
 functions: it is something they can hold onto, grasp, and work with.
 
\end_layout

\end_body
\end_document
